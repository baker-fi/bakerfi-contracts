/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  WstETHToETHOracleMock,
  WstETHToETHOracleMockInterface,
} from "../../../contracts/mocks/WstETHToETHOracleMock";

const _abi = [
  {
    inputs: [],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrecision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405263435a6e80608052633b9aca0060a05234801561002057600080fd5b5060805160a05160c66100426000396000606d015260006039015260c66000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80638e15f4731460375780639670c0bc14606b575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b60405190815260200160405180910390f35b7f0000000000000000000000000000000000000000000000000000000000000000605956fea2646970667358221220b1b59122f92ff7da51591732d57d0f92807398152a3a6a1383751186e33ba53364736f6c63430008120033";

type WstETHToETHOracleMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WstETHToETHOracleMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WstETHToETHOracleMock__factory extends ContractFactory {
  constructor(...args: WstETHToETHOracleMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WstETHToETHOracleMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): WstETHToETHOracleMock__factory {
    return super.connect(runner) as WstETHToETHOracleMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WstETHToETHOracleMockInterface {
    return new Interface(_abi) as WstETHToETHOracleMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WstETHToETHOracleMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as WstETHToETHOracleMock;
  }
}
