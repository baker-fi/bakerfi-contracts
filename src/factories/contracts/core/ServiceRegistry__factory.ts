/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ServiceRegistry,
  ServiceRegistryInterface,
} from "../../../contracts/core/ServiceRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nameHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "service",
        type: "address",
      },
    ],
    name: "ServiceRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nameHash",
        type: "bytes32",
      },
    ],
    name: "ServiceUnregistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "serviceName",
        type: "string",
      },
    ],
    name: "getService",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "serviceNameHash",
        type: "bytes32",
      },
    ],
    name: "getServiceAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "serviceHash",
        type: "bytes32",
      },
    ],
    name: "getServiceFromHash",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "getServiceNameHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "serviceNameHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "serviceAddress",
        type: "address",
      },
    ],
    name: "registerService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "serviceNameHash",
        type: "bytes32",
      },
    ],
    name: "unregisterService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161079538038061079583398101604081905261002f916100f1565b610038336100a1565b6001600160a01b0381166100925760405162461bcd60e51b815260206004820152601560248201527f496e76616c6964204f776e657220416464726573730000000000000000000000604482015260640160405180910390fd5b61009b816100a1565b50610121565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561010357600080fd5b81516001600160a01b038116811461011a57600080fd5b9392505050565b610665806101306000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063794758be11610066578063794758be1461011c5780638da5cb5b1461012f5780639c2bfa2514610140578063c2527b3214610098578063f2fde38b1461015357600080fd5b80632e5688e1146100985780634a56b027146100de578063715018a6146100ff57806372dd0ff814610109575b600080fd5b6100c16100a63660046104b6565b6000908152600160205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16100ec3660046104e5565b610166565b6040519081526020016100d5565b610107610196565b005b6101076101173660046105b2565b6101aa565b6100c161012a3660046104e5565b610282565b6000546001600160a01b03166100c1565b61010761014e3660046104b6565b6102ce565b6101076101613660046105de565b610393565b6000816040516020016101799190610600565b604051602081830303815290604052805190602001209050919050565b61019e61040c565b6101a86000610466565b565b6101b261040c565b6000828152600160205260409020546001600160a01b03161561021c5760405162461bcd60e51b815260206004820152601960248201527f72656769737472792f736572766963652d6f766572726964650000000000000060448201526064015b60405180910390fd5b60008281526001602090815260409182902080546001600160a01b0319166001600160a01b0385169081179091558251858152918201527f0453e3ffce9b0d4f994d54652037d3e15d87ec29aab0aafba90ac322edc87c25910160405180910390a15050565b600060016000836040516020016102999190610600565b60408051601f19818403018152918152815160209283012083529082019290925201600020546001600160a01b031692915050565b6102d661040c565b6000818152600160205260409020546001600160a01b031661033a5760405162461bcd60e51b815260206004820152601f60248201527f72656769737472792f736572766963652d646f65732d6e6f742d6578697374006044820152606401610213565b6000818152600160205260409081902080546001600160a01b0319169055517f475a09e552c07ad6aa3d8b6f3fb547091aae08290004e78277eb2ffb854ea21e906103889083815260200190565b60405180910390a150565b61039b61040c565b6001600160a01b0381166104005760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610213565b61040981610466565b50565b6000546001600160a01b031633146101a85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610213565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104c857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104f757600080fd5b813567ffffffffffffffff8082111561050f57600080fd5b818401915084601f83011261052357600080fd5b813581811115610535576105356104cf565b604051601f8201601f19908116603f0116810190838211818310171561055d5761055d6104cf565b8160405282815287602084870101111561057657600080fd5b826020860160208301376000928101602001929092525095945050505050565b80356001600160a01b03811681146105ad57600080fd5b919050565b600080604083850312156105c557600080fd5b823591506105d560208401610596565b90509250929050565b6000602082840312156105f057600080fd5b6105f982610596565b9392505050565b6000825160005b818110156106215760208186018101518583015201610607565b50600092019182525091905056fea26469706673582212206d4c403f681ab1132d231ed6211abef9db1b5008a60188a4a2549158445a8c2764736f6c63430008120033";

type ServiceRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ServiceRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ServiceRegistry__factory extends ContractFactory {
  constructor(...args: ServiceRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override deploy(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner, overrides || {}) as Promise<
      ServiceRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ServiceRegistry__factory {
    return super.connect(runner) as ServiceRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ServiceRegistryInterface {
    return new Interface(_abi) as ServiceRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ServiceRegistry {
    return new Contract(address, _abi, runner) as unknown as ServiceRegistry;
  }
}
