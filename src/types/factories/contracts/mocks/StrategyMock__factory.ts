/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type { StrategyMock, StrategyMockInterface } from '../../../contracts/mocks/StrategyMock';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'assetSt',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'NoBalance',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'newDeployment',
        type: 'uint256',
      },
    ],
    name: 'StrategyAmountUpdate',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'StrategyDeploy',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'StrategyLoss',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'StrategyProfit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'StrategyUndeploy',
    type: 'event',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'deploy',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountAdded',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: 'totalCollateralInEth',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'totalDebtInEth',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'loanToValue',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'harvest',
    outputs: [
      {
        internalType: 'int256',
        name: 'balanceChange',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'havestPerCall',
        type: 'int256',
      },
    ],
    name: 'setHarvestPerCall',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'ratio',
        type: 'uint256',
      },
    ],
    name: 'setRatio',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: 'actualAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'undeploy',
    outputs: [
      {
        internalType: 'uint256',
        name: 'actualAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60806040526032600055600060015534801561001a57600080fd5b506040516106123803806106128339810160408190526100399161005e565b600280546001600160a01b0319166001600160a01b039290921691909117905561008e565b60006020828403121561007057600080fd5b81516001600160a01b038116811461008757600080fd5b9392505050565b6105758061009d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637398ab181161005b5780637398ab18146100de5780637ac03d9914610101578063a5e3875114610116578063b2237ba31461012957600080fd5b806301e1d1141461008d57806338d52e0f146100a8578063440e6dff146100c35780634641257d146100d6575b600080fd5b61009561013c565b6040519081526020015b60405180910390f35b6002546040516001600160a01b03909116815260200161009f565b6100956100d136600461047c565b6101ed565b600154610095565b6100e661032a565b6040805193845260208401929092529082015260600161009f565b61011461010f36600461047c565b600155565b005b61009561012436600461047c565b6103cd565b61011461013736600461047c565b600055565b6002546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ad9190610495565b905060006064600054836101c191906104c4565b6101cb91906104e1565b9050808210156101dc5760006101e6565b6101e68183610503565b9250505090565b6002546040516370a0823160e01b815230600482015260009183916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e9190610495565b101561027d57604051636165515360e11b815260040160405180910390fd5b60025460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f29190610516565b506102fd8247610503565b6040517f2dd98c29534f0234343e33770888eec9561b1580bba498c1cda8c1b8e3dbe1e090600090a25090565b6002546040516370a0823160e01b81523060048201526000918291829182916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f9190610495565b9050806064600054836103b291906104c4565b6103bc91906104e1565b633b9aca0093509350935050909192565b60405160009082907f2dd98c29534f0234343e33770888eec9561b1580bba498c1cda8c1b8e3dbe1e0908390a26002546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610451573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104759190610516565b5090919050565b60006020828403121561048e57600080fd5b5035919050565b6000602082840312156104a757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176104db576104db6104ae565b92915050565b6000826104fe57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156104db576104db6104ae565b60006020828403121561052857600080fd5b8151801515811461053857600080fd5b939250505056fea26469706673582212207719c8bccc8218bb83784027b02f925b348d8d3993e8c3081905300c85cb73d464736f6c63430008180033';

type StrategyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyMock__factory extends ContractFactory {
  constructor(...args: StrategyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    assetSt: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(assetSt, overrides || {});
  }
  override deploy(assetSt: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(assetSt, overrides || {}) as Promise<
      StrategyMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StrategyMock__factory {
    return super.connect(runner) as StrategyMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyMockInterface {
    return new Interface(_abi) as StrategyMockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): StrategyMock {
    return new Contract(address, _abi, runner) as unknown as StrategyMock;
  }
}
