/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type { CommandMock, CommandMockInterface } from '../../../contracts/mocks/CommandMock';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'index',
        type: 'uint8',
      },
    ],
    name: 'InvalidMappingIndex',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'position',
        type: 'uint8',
      },
    ],
    name: 'InvalidPosition',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'callStack',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint64',
        name: 'inputMapping',
        type: 'uint64',
      },
      {
        internalType: 'uint8',
        name: 'position',
        type: 'uint8',
      },
    ],
    name: 'pullInputParam',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'callStack',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint64',
        name: 'outputMapping',
        type: 'uint64',
      },
      {
        internalType: 'uint8',
        name: 'position',
        type: 'uint8',
      },
    ],
    name: 'pushOutputParam',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50610451806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806319b044dd1461003b57806339175a3214610064575b600080fd5b61004e610049366004610280565b610085565b60405161005b9190610369565b60405180910390f35b610077610072366004610280565b61009c565b60405190815260200161005b565b6060610093858585856100b3565b50929392505050565b60006100aa85858585610176565b95945050505050565b60088160ff1611156100e257604051634e6153af60e11b815260ff821660048201526024015b60405180910390fd5b600060ff6100f16001846103c3565b6100fc9060086103e2565b60ff168467ffffffffffffffff16901c16905060088160ff161115610139576040516353f4667560e11b815260ff821660048201526024016100d9565b60ff81161561016f57838561014f6001846103c3565b60ff168151811061016257610162610405565b6020026020010181815250505b5050505050565b600060088260ff1611156101a257604051634e6153af60e11b815260ff831660048201526024016100d9565b600060ff6101b16001856103c3565b6101bc9060086103e2565b60ff168567ffffffffffffffff16901c16905060088160ff1611156101f9576040516353f4667560e11b815260ff821660048201526024016100d9565b60008160ff161161020a5784610232565b856102166001836103c3565b60ff168151811061022957610229610405565b60200260200101515b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b803567ffffffffffffffff8116811461026a57600080fd5b919050565b803560ff8116811461026a57600080fd5b6000806000806080858703121561029657600080fd5b843567ffffffffffffffff808211156102ae57600080fd5b818701915087601f8301126102c257600080fd5b81356020828211156102d6576102d661023c565b8160051b604051601f19603f830116810181811086821117156102fb576102fb61023c565b60405292835281830193508481018201928b84111561031957600080fd5b948201945b838610156103375785358552948201949382019361031e565b9850508801359550610350925050604087019050610252565b915061035e6060860161026f565b905092959194509250565b6020808252825182820181905260009190848201906040850190845b818110156103a157835183529284019291840191600101610385565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156103dc576103dc6103ad565b92915050565b60ff81811683821602908116908181146103fe576103fe6103ad565b5092915050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220e231aa38f81a5f594b36a48326d1b1a945b907bc35c09c5ae9b0b68ab9a9719e64736f6c63430008180033';

type CommandMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommandMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommandMock__factory extends ContractFactory {
  constructor(...args: CommandMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CommandMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CommandMock__factory {
    return super.connect(runner) as CommandMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommandMockInterface {
    return new Interface(_abi) as CommandMockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CommandMock {
    return new Contract(address, _abi, runner) as unknown as CommandMock;
  }
}
