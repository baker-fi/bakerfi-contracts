/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20Mock,
  ERC20MockInterface,
} from "../../../contracts/mocks/ERC20Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_cap",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162001988380380620019888339810160408190526200003591620003d2565b6040805180820190915260018152603160f81b60208201528490819081866003620000618382620004f7565b506004620000708282620004f7565b5062000082915083905060056200016b565b61012052620000938160066200016b565b61014052815160208084019190912060e052815190820120610100524660a0526200012160e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506200013633620001a4565b620001428183620001f6565b6200014d81620001a4565b50506009805460ff60a01b1916600960a11b179055506200063f9050565b60006020835110156200018b576200018383620002bd565b90506200019e565b81620001988482620004f7565b5060ff90505b92915050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620002525760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b8060026000828254620002669190620005c3565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600080829050601f81511115620002eb578260405163305a27a960e01b8152600401620002499190620005e5565b8051620002f8826200061a565b179392505050565b505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620003385781810151838201526020016200031e565b50506000910152565b600082601f8301126200035357600080fd5b81516001600160401b038082111562000370576200037062000305565b604051601f8301601f19908116603f011681019082821181831017156200039b576200039b62000305565b81604052838152866020858801011115620003b557600080fd5b620003c88460208301602089016200031b565b9695505050505050565b60008060008060808587031215620003e957600080fd5b84516001600160401b03808211156200040157600080fd5b6200040f8883890162000341565b955060208701519150808211156200042657600080fd5b50620004358782880162000341565b60408701516060880151919550935090506001600160a01b03811681146200045c57600080fd5b939692955090935050565b600181811c908216806200047c57607f821691505b6020821081036200049d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000300576000816000526020600020601f850160051c81016020861015620004ce5750805b601f850160051c820191505b81811015620004ef57828155600101620004da565b505050505050565b81516001600160401b0381111562000513576200051362000305565b6200052b8162000524845462000467565b84620004a3565b602080601f8311600181146200056357600084156200054a5750858301515b600019600386901b1c1916600185901b178555620004ef565b600085815260208120601f198616915b82811015620005945788860151825594840194600190910190840162000573565b5085821015620005b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200019e57634e487b7160e01b600052601160045260246000fd5b6020815260008251806020840152620006068160408501602087016200031b565b601f01601f19169190910160400192915050565b805160208083015191908110156200049d5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516112ee6200069a60003960006104430152600061041801526000610b5401526000610b2c01526000610a8701526000610ab101526000610adb01526112ee6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637a1395aa116100ad578063a457c2d711610071578063a457c2d714610278578063a9059cbb1461028b578063d505accf1461029e578063dd62ed3e146102b1578063f2fde38b146102c457600080fd5b80637a1395aa146101f95780637ecebe001461022757806384b0196e1461023a5780638da5cb5b1461025557806395d89b411461027057600080fd5b8063313ce567116100f4578063313ce5671461018c5780633644e515146101ab57806339509351146101b357806370a08231146101c6578063715018a6146101ef57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102d7565b60405161013b9190611034565b60405180910390f35b61015761015236600461106a565b610369565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004611094565b610383565b600954600160a01b900460ff1660405160ff909116815260200161013b565b61016b6103a7565b6101576101c136600461106a565b6103b6565b61016b6101d43660046110d0565b6001600160a01b031660009081526020819052604090205490565b6101f76103d8565b005b6101f76102073660046110fc565b6009805460ff909216600160a01b0260ff60a01b19909216919091179055565b61016b6102353660046110d0565b6103ec565b61024261040a565b60405161013b9796959493929190611117565b6009546040516001600160a01b03909116815260200161013b565b61012e610493565b61015761028636600461106a565b6104a2565b61015761029936600461106a565b610522565b6101f76102ac3660046111b0565b610530565b61016b6102bf36600461121a565b610694565b6101f76102d23660046110d0565b6106bf565b6060600380546102e69061124d565b80601f01602080910402602001604051908101604052809291908181526020018280546103129061124d565b801561035f5780601f106103345761010080835404028352916020019161035f565b820191906000526020600020905b81548152906001019060200180831161034257829003601f168201915b5050505050905090565b600033610377818585610738565b60019150505b92915050565b60003361039185828561085c565b61039c8585856108d6565b506001949350505050565b60006103b1610a7a565b905090565b6000336103778185856103c98383610694565b6103d39190611281565b610738565b6103e0610ba5565b6103ea6000610bff565b565b6001600160a01b03811660009081526007602052604081205461037d565b60006060808280808361043e7f00000000000000000000000000000000000000000000000000000000000000006005610c51565b6104697f00000000000000000000000000000000000000000000000000000000000000006006610c51565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102e69061124d565b600033816104b08286610694565b9050838110156105155760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61039c8286868403610738565b6000336103778185856108d6565b834211156105805760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161050c565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105af8c610cfc565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061060a82610d24565b9050600061061a82878787610d51565b9050896001600160a01b0316816001600160a01b03161461067d5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161050c565b6106888a8a8a610738565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6106c7610ba5565b6001600160a01b03811661072c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161050c565b61073581610bff565b50565b6001600160a01b03831661079a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161050c565b6001600160a01b0382166107fb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161050c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006108688484610694565b905060001981146108d057818110156108c35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161050c565b6108d08484848403610738565b50505050565b6001600160a01b03831661093a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161050c565b6001600160a01b03821661099c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161050c565b6001600160a01b03831660009081526020819052604090205481811015610a145760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161050c565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36108d0565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610ad357507f000000000000000000000000000000000000000000000000000000000000000046145b15610afd57507f000000000000000000000000000000000000000000000000000000000000000090565b6103b1604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6009546001600160a01b031633146103ea5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050c565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606060ff8314610c6b57610c6483610d79565b905061037d565b818054610c779061124d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca39061124d565b8015610cf05780601f10610cc557610100808354040283529160200191610cf0565b820191906000526020600020905b815481529060010190602001808311610cd357829003601f168201915b5050505050905061037d565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b600061037d610d31610a7a565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000610d6287878787610db8565b91509150610d6f81610e7c565b5095945050505050565b60606000610d8683610fc6565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610def5750600090506003610e73565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610e43573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610e6c57600060019250925050610e73565b9150600090505b94509492505050565b6000816004811115610e9057610e906112a2565b03610e985750565b6001816004811115610eac57610eac6112a2565b03610ef95760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161050c565b6002816004811115610f0d57610f0d6112a2565b03610f5a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161050c565b6003816004811115610f6e57610f6e6112a2565b036107355760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161050c565b600060ff8216601f81111561037d57604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b8181101561101457602081850181015186830182015201610ff8565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006110476020830184610fee565b9392505050565b80356001600160a01b038116811461106557600080fd5b919050565b6000806040838503121561107d57600080fd5b6110868361104e565b946020939093013593505050565b6000806000606084860312156110a957600080fd5b6110b28461104e565b92506110c06020850161104e565b9150604084013590509250925092565b6000602082840312156110e257600080fd5b6110478261104e565b803560ff8116811461106557600080fd5b60006020828403121561110e57600080fd5b611047826110eb565b60ff60f81b881681526000602060e0602084015261113860e084018a610fee565b838103604085015261114a818a610fee565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b8181101561119e57835183529284019291840191600101611182565b50909c9b505050505050505050505050565b600080600080600080600060e0888a0312156111cb57600080fd5b6111d48861104e565b96506111e26020890161104e565b955060408801359450606088013593506111fe608089016110eb565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561122d57600080fd5b6112368361104e565b91506112446020840161104e565b90509250929050565b600181811c9082168061126157607f821691505b602082108103610d1e57634e487b7160e01b600052602260045260246000fd5b8082018082111561037d57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea26469706673582212207ded7cc4bc1a4f7dc59ba2b2ce8dec740af3ff9117254fd559f4a00aa167098764736f6c63430008180033";

type ERC20MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Mock__factory extends ContractFactory {
  constructor(...args: ERC20MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    _cap: BigNumberish,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      _cap,
      owner,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    _cap: BigNumberish,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, _cap, owner, overrides || {}) as Promise<
      ERC20Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Mock__factory {
    return super.connect(runner) as ERC20Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MockInterface {
    return new Interface(_abi) as ERC20MockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Mock {
    return new Contract(address, _abi, runner) as unknown as ERC20Mock;
  }
}
