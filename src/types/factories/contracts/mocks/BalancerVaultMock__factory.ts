/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  BalancerVaultMock,
  BalancerVaultMockInterface,
} from '../../../contracts/mocks/BalancerVaultMock';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'flashLoanToken',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InvalidAmountList',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenList',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LoanNotPaid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoEnoughBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'userData',
        type: 'bytes',
      },
    ],
    name: 'flashLoan',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFlashLoanFeePercentage',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getProtocolFeesCollector',
    outputs: [
      {
        internalType: 'contract IProtocolFeesCollector',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'poolId',
            type: 'bytes32',
          },
          {
            internalType: 'enum IVault.SwapKind',
            name: 'kind',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'assetIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'assetOut',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'userData',
            type: 'bytes',
          },
        ],
        internalType: 'struct IVault.SingleSwap',
        name: '',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'sender',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'fromInternalBalance',
            type: 'bool',
          },
          {
            internalType: 'address payable',
            name: 'recipient',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'toInternalBalance',
            type: 'bool',
          },
        ],
        internalType: 'struct IVault.FundManagement',
        name: '',
        type: 'tuple',
      },
    ],
    name: 'querySwap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'bytes32',
            name: 'poolId',
            type: 'bytes32',
          },
          {
            internalType: 'enum IVault.SwapKind',
            name: 'kind',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'assetIn',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'assetOut',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'userData',
            type: 'bytes',
          },
        ],
        internalType: 'struct IVault.SingleSwap',
        name: '',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'sender',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'fromInternalBalance',
            type: 'bool',
          },
          {
            internalType: 'address payable',
            name: 'recipient',
            type: 'address',
          },
          {
            internalType: 'bool',
            name: 'toInternalBalance',
            type: 'bool',
          },
        ],
        internalType: 'struct IVault.FundManagement',
        name: '',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'swap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a060405234801561001057600080fd5b50604051610ae6380380610ae683398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610a466100a060003960008181610134015281816101b60152818161028901526103c20152610a466000f3fe60806040526004361061004a5760003560e01c806352bbbe291461004f5780635c38449e1461007a578063d2946c2b1461009c578063d877845c146100b7578063e969f6b3146100cb575b600080fd5b61006761005d366004610693565b6000949350505050565b6040519081526020015b60405180910390f35b34801561008657600080fd5b5061009a610095366004610784565b6100ee565b005b3480156100a857600080fd5b50604051308152602001610071565b3480156100c357600080fd5b506000610067565b3480156100d757600080fd5b506100676100e636600461087f565b600092915050565b825160011461011057604051637bbec00360e01b815260040160405180910390fd5b81516001146101325760405163cbf950ff60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168360008151811061016f5761016f6108ce565b60200260200101516001600160a01b03161461019e5760405163c1ab6dc160e01b815260040160405180910390fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610205573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022991906108e4565b90508260008151811061023e5761023e6108ce565b6020026020010151811161026557604051635ad8341160e01b815260040160405180910390fd5b604080516001808252818301909252600091602080830190803683370190505090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb87866000815181106102ca576102ca6108ce565b60200260200101516040518363ffffffff1660e01b81526004016103039291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610322573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034691906108fd565b5060405163f04f270760e01b81526001600160a01b0387169063f04f27079061037990889088908690899060040161095d565b600060405180830381600087803b15801561039357600080fd5b505af11580156103a7573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691506370a0823190602401602060405180830381865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043691906108e4565b905082811015610459576040516375c6af1160e01b815260040160405180910390fd5b50505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156104a1576104a1610462565b604052919050565b8035600281106104b857600080fd5b919050565b6001600160a01b03811681146104d257600080fd5b50565b80356104b8816104bd565b600082601f8301126104f157600080fd5b813567ffffffffffffffff81111561050b5761050b610462565b61051e601f8201601f1916602001610478565b81815284602083860101111561053357600080fd5b816020850160208301376000918101602001919091529392505050565b600060c0828403121561056257600080fd5b60405160c0810167ffffffffffffffff828210818311171561058657610586610462565b816040528293508435835261059d602086016104a9565b60208401526105ae604086016104d5565b60408401526105bf606086016104d5565b60608401526080850135608084015260a08501359150808211156105e257600080fd5b506105ef858286016104e0565b60a0830152505092915050565b80151581146104d257600080fd5b60006080828403121561061c57600080fd5b6040516080810181811067ffffffffffffffff8211171561063f5761063f610462565b6040529050808235610650816104bd565b81526020830135610660816105fc565b60208201526040830135610673816104bd565b60408201526060830135610686816105fc565b6060919091015292915050565b60008060008060e085870312156106a957600080fd5b843567ffffffffffffffff8111156106c057600080fd5b6106cc87828801610550565b9450506106dc866020870161060a565b939693955050505060a08201359160c0013590565b600067ffffffffffffffff82111561070b5761070b610462565b5060051b60200190565b600082601f83011261072657600080fd5b8135602061073b610736836106f1565b610478565b8083825260208201915060208460051b87010193508684111561075d57600080fd5b602086015b848110156107795780358352918301918301610762565b509695505050505050565b6000806000806080858703121561079a57600080fd5b84356107a5816104bd565b935060208581013567ffffffffffffffff808211156107c357600080fd5b818801915088601f8301126107d757600080fd5b81356107e5610736826106f1565b81815260059190911b8301840190848101908b83111561080457600080fd5b938501935b8285101561082b57843561081c816104bd565b82529385019390850190610809565b97505050604088013592508083111561084357600080fd5b61084f89848a01610715565b9450606088013592508083111561086557600080fd5b5050610873878288016104e0565b91505092959194509250565b60008060a0838503121561089257600080fd5b823567ffffffffffffffff8111156108a957600080fd5b6108b585828601610550565b9250506108c5846020850161060a565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156108f657600080fd5b5051919050565b60006020828403121561090f57600080fd5b815161091a816105fc565b9392505050565b60008151808452602080850194506020840160005b8381101561095257815187529582019590820190600101610936565b509495945050505050565b6080808252855190820181905260009060209060a0840190828901845b8281101561099f5781516001600160a01b03168452928401929084019060010161097a565b505050838103828501526109b38188610921565b905083810360408501526109c78187610921565b90508381036060850152845180825260005b818110156109f45786810184015183820185015283016109d9565b506000828201840152601f01601f19160101969550505050505056fea2646970667358221220c9afea0a333de83277e43d131fa650be6fc9e51a5bf821b7e4500b84202a620264736f6c63430008180033';

type BalancerVaultMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerVaultMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerVaultMock__factory extends ContractFactory {
  constructor(...args: BalancerVaultMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    flashLoanToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(flashLoanToken, overrides || {});
  }
  override deploy(
    flashLoanToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(flashLoanToken, overrides || {}) as Promise<
      BalancerVaultMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BalancerVaultMock__factory {
    return super.connect(runner) as BalancerVaultMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerVaultMockInterface {
    return new Interface(_abi) as BalancerVaultMockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BalancerVaultMock {
    return new Contract(address, _abi, runner) as unknown as BalancerVaultMock;
  }
}
