/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  VaultRouterMock,
  VaultRouterMockInterface,
} from '../../../contracts/mocks/VaultRouterMock';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CallerNotTheGovernor',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'ETHTransferNotAllowed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'commandIndex',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'message',
        type: 'bytes',
      },
    ],
    name: 'ExecutionFailed',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedAllowance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedToApproveAllowance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedToApproveAllowanceForVault',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InsufficientWETHBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'action',
        type: 'uint256',
      },
    ],
    name: 'InvalidCommand',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidGovernorAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidInputToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'index',
        type: 'uint8',
      },
    ],
    name: 'InvalidMappingIndex',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidOutputToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'position',
        type: 'uint8',
      },
    ],
    name: 'InvalidPosition',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidProvider',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidRecipient',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidRouter',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidVaultAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidWETHAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidWETHContract',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotAuthorized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotEnoughAllowance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RouteAlreadyAuthorized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RouteNotAuthorized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageTooHigh',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SwapFailed',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SweepFailed',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernor',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernor',
        type: 'address',
      },
    ],
    name: 'GovernshipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'approveTokenForVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'callInput',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'tokenOut',
        type: 'address',
      },
    ],
    name: 'disableRoute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'tokenOut',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'enum UseUnifiedSwapper.SwapProvider',
            name: 'provider',
            type: 'uint8',
          },
          {
            internalType: 'address',
            name: 'router',
            type: 'address',
          },
          {
            internalType: 'uint24',
            name: 'uniV3Tier',
            type: 'uint24',
          },
          {
            internalType: 'uint24',
            name: 'tickSpacing',
            type: 'uint24',
          },
        ],
        internalType: 'struct UseUnifiedSwapper.RouteInfo',
        name: 'routeInfo',
        type: 'tuple',
      },
    ],
    name: 'enableRoute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'action',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct Command[]',
        name: 'commands',
        type: 'tuple[]',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'initialOwner',
        type: 'address',
      },
      {
        internalType: 'contract IWETH',
        name: 'weth',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenIn',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'tokenOut',
        type: 'address',
      },
    ],
    name: 'isRouteEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'isTokenApprovedForVault',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newGovernor',
        type: 'address',
      },
    ],
    name: 'transferGovernorship',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'unapproveTokenForVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6120cf80620000ed6000396000f3fe6080604052600436106100e15760003560e01c8063715018a61161007f578063ae7d2e3c11610059578063ae7d2e3c1461024b578063b58ce21d14610294578063b6aa515b146102a7578063f2fde38b146102c757600080fd5b8063715018a6146101f85780638da5cb5b1461020d5780638e791f751461022b57600080fd5b80631770ec82116100bb5780631770ec8214610166578063323ec3471461018857806339bc9c5c146101b8578063485cc955146101d857600080fd5b80630722f9c2146100ed5780630c340a241461010f57806315a97e971461014657600080fd5b366100e857005b600080fd5b3480156100f957600080fd5b5061010d6101083660046119f8565b6102e7565b005b34801561011b57600080fd5b506065546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015257600080fd5b5061010d610161366004611ab8565b610533565b34801561017257600080fd5b5061017b610714565b60405161013d9190611b37565b34801561019457600080fd5b506101a86101a3366004611ab8565b6107a2565b604051901515815260200161013d565b3480156101c457600080fd5b5061010d6101d3366004611ab8565b6107e1565b3480156101e457600080fd5b5061010d6101f3366004611ab8565b6108ca565b34801561020457600080fd5b5061010d6109ec565b34801561021957600080fd5b506033546001600160a01b0316610129565b34801561023757600080fd5b5061010d610246366004611ab8565b610a00565b34801561025757600080fd5b506101a8610266366004611ab8565b6001600160a01b03918216600090815260676020908152604080832093909416825291909152205460ff1690565b61010d6102a2366004611b4a565b610a85565b3480156102b357600080fd5b5061010d6102c2366004611bbf565b610b54565b3480156102d357600080fd5b5061010d6102e2366004611bbf565b610bb2565b6065546001600160a01b031633146103125760405163e6e025c760e01b815260040160405180910390fd5b600061031e8484610c28565b90506000808281526066602052604090205460ff16600381111561034457610344611bdc565b1461036257604051632291fe5360e21b815260040160405180910390fd5b602082015160405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529085169063095ea7b3906044016020604051808303816000875af11580156103b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dc9190611bf2565b6103f9576040516302e8763f60e31b815260040160405180910390fd5b602082015160405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529084169063095ea7b3906044016020604051808303816000875af115801561044f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104739190611bf2565b610490576040516302e8763f60e31b815260040160405180910390fd5b60008181526066602052604090208251815484929190829060ff191660018360038111156104c0576104c0611bdc565b021790555060208201518154604084015160609094015162ffffff908116600160c01b0262ffffff60c01b1991909516600160a81b0262ffffff60a81b196001600160a01b039094166101000293909316610100600160c01b031990921691909117919091171691909117905550505050565b6065546001600160a01b0316331461055e5760405163e6e025c760e01b815260040160405180910390fd5b600061056a8383610c28565b90506000808281526066602052604090205460ff16600381111561059057610590611bdc565b036105ae5760405163139f8d8760e11b815260040160405180910390fd5b6000818152606660205260409081902054905163095ea7b360e01b81526101009091046001600160a01b0390811660048301526001602483015284169063095ea7b3906044016020604051808303816000875af1158015610613573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106379190611bf2565b610654576040516302e8763f60e31b815260040160405180910390fd5b6000818152606660205260409081902054905163095ea7b360e01b81526101009091046001600160a01b0390811660048301526001602483015283169063095ea7b3906044016020604051808303816000875af11580156106b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dd9190611bf2565b6106fa576040516302e8763f60e31b815260040160405180910390fd5b6000908152606660205260409020805460ff191690555050565b609b805461072190611c14565b80601f016020809104026020016040519081016040528092919081815260200182805461074d90611c14565b801561079a5780601f1061076f5761010080835404028352916020019161079a565b820191906000526020600020905b81548152906001019060200180831161077d57829003601f168201915b505050505081565b6000806107af8484610c28565b90506000808281526066602052604090205460ff1660038111156107d5576107d5611bdc565b14159150505b92915050565b6065546001600160a01b0316331461080c5760405163e6e025c760e01b815260040160405180910390fd5b6001600160a01b0382811660008181526067602090815260408083209486168084529490915290819020805460ff191660011790555163095ea7b360e01b81526004810191909152600019602482015263095ea7b3906044015b6020604051808303816000875af1158015610885573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a99190611bf2565b6108c6576040516376e540db60e01b815260040160405180910390fd5b5050565b600054610100900460ff16158080156108ea5750600054600160ff909116105b806109045750303b158015610904575060005460ff166001145b61096c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561098f576000805461ff0019166101001790555b61099883610cb3565b6109a182610ce3565b80156109e7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6109f4610d45565b6109fe6000610d9f565b565b6065546001600160a01b03163314610a2b5760405163e6e025c760e01b815260040160405180910390fd5b6001600160a01b0382811660008181526067602090815260408083209486168084529490915290819020805460ff191690555163095ea7b360e01b815260048101919091526001602482015263095ea7b390604401610866565b60408051600880825261012082019092526060916000918491839190602082016101008036833701905050905060005b82811015610b4b57610b1d878783818110610ad257610ad2611c48565b9050602002810190610ae49190611c5e565b35888884818110610af757610af7611c48565b9050602002810190610b099190611c5e565b610b17906020810190611c7e565b85610df1565b9550935083610b43578085604051632c4029e960e01b8152600401610963929190611ccc565b600101610ab5565b50505050505050565b6065546001600160a01b03163314610b7f5760405163e6e025c760e01b815260040160405180910390fd5b6001600160a01b038116610ba65760405163fa68714160e01b815260040160405180910390fd5b610baf81610ff3565b50565b610bba610d45565b6001600160a01b038116610c1f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610963565b610baf81610d9f565b6000816001600160a01b0316836001600160a01b031610610c6657604080518082019091526001600160a01b03808416825284166020820152610c85565b604080518082019091526001600160a01b038085168252831660208201525b604051602001610c959190611ced565b60405160208183030381529060405280519060200120905092915050565b600054610100900460ff16610cda5760405162461bcd60e51b815260040161096390611d27565b610ba681610d9f565b600054610100900460ff16610d0a5760405162461bcd60e51b815260040161096390611d27565b606880546001600160a01b0319166001600160a01b038316908117909155610baf576040516332a1e6cf60e21b815260040160405180910390fd5b6033546001600160a01b031633146109fe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610963565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001606063ffffffff861661ffff602088901c811690604089901c1682851480610e21575063ffffffff83166020145b80610e32575063ffffffff83166021145b15610e4b57610e44888888858561104f565b9350610fe7565b60011963ffffffff841601610e6657610e4488888885611103565b60021963ffffffff841601610e8157610e4488888885611145565b60031963ffffffff841601610e9c57610e44888888856111b7565b60041963ffffffff841601610eb757610e44888888856111d8565b60051963ffffffff841601610ed257610e4488888884611250565b600a1963ffffffff841601610eed57610e44888888846112a2565b60061963ffffffff841601610f0857610e44888888856112ed565b60071963ffffffff841601610f2357610e44888888856112ed565b600f1963ffffffff841601610f3f57610e448888888585611328565b60101963ffffffff841601610f5b57610e448888888585611328565b60111963ffffffff841601610f7757610e44888888858561139d565b60121963ffffffff841601610f9357610e44888888858561139d565b60131963ffffffff841601610faf57610e448888888585611415565b60141963ffffffff841601610fcb57610e448888888585611465565b6040516320c9d88960e21b8152600481018a9052602401610963565b50505094509492505050565b6065546040516001600160a01b038084169216907f4a2da5517922d469e27cc43b2e88ebd65d79400caf5bb7cc34419e64cf85bb1a90600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b6060600061105f86880188611dff565b90506110788582606001518663ffffffff16600161148f565b6060820152608081015161109690869063ffffffff8716600261148f565b60808201526000806110a783611555565b915091506110be87838763ffffffff1660016115ba565b6110d187828763ffffffff1660026115ba565b60408051602081018490529081018290526060015b604051602081830303815290604052935050505095945050505050565b60608435602086013561111f858263ffffffff8716600161148f565b905061112b8282611678565b505060408051602081019091526000815295945050505050565b60608435602086013560408701356001600160a01b038216331461117c5760405163ea8e4eb560e01b815260040160405180910390fd5b61118f86828763ffffffff16600161148f565b905061119c8383836116b1565b50506040805160208101909152600081529695505050505050565b606084356020860135604087013561118f868263ffffffff8816600161148f565b6060843560208601356040870135878401356001600160a01b03831633146112135760405163ea8e4eb560e01b815260040160405180910390fd5b61122687828863ffffffff16600161148f565b9050611234848484846116fb565b5050604080516020810190915260008152979650505050505050565b60608435602086013560006112658383611744565b905061127a86828763ffffffff1660016115ba565b6040805160208101839052016040516020818303038152906040529350505050949350505050565b6060843560006112b182611786565b90506112c685828663ffffffff1660016115ba565b60408051602081018390520160405160208183030381529060405292505050949350505050565b60608435611304848263ffffffff8616600161148f565b905061130f816117c0565b5050604080516020810190915260008152949350505050565b60608535602087013560408801358884013561134d888463ffffffff8a16600161148f565b9250600061135d858585856117e9565b905061137289828963ffffffff1660016115ba565b6040805160208101839052016040516020818303038152906040529550505050505095945050505050565b606085356020870135604088013533898501356113c3898563ffffffff8b16600161148f565b935060006113d4868686868661183e565b90506113e98a828a63ffffffff1660016115ba565b604080516020810183905201604051602081830303815290604052965050505050505095945050505050565b606085356020870135611431868263ffffffff8816600161148f565b9050600061143f838361189c565b905061145487828763ffffffff1660016115ba565b6040805160208101839052016110e6565b606085356020870135611481868263ffffffff8816600161148f565b9050600061143f8383611936565b600060088260ff1611156114bb57604051634e6153af60e11b815260ff83166004820152602401610963565b600060ff6114ca600185611ed5565b6114d5906008611eee565b60ff168567ffffffffffffffff16901c16905060088160ff161115611512576040516353f4667560e11b815260ff82166004820152602401610963565b60008160ff1611611523578461154b565b8561152f600183611ed5565b60ff168151811061154257611542611c48565b60200260200101515b9695505050505050565b600080826000015183602001518460400151856060015186608001518760a0015160405160200161158b96959493929190611f0a565b604051602081830303815290604052609b90816115a89190611fc0565b50505060608101516080909101519091565b60088160ff1611156115e457604051634e6153af60e11b815260ff82166004820152602401610963565b600060ff6115f3600184611ed5565b6115fe906008611eee565b60ff168467ffffffffffffffff16901c16905060088160ff16111561163b576040516353f4667560e11b815260ff82166004820152602401610963565b60ff811615611671578385611651600184611ed5565b60ff168151811061166457611664611c48565b6020026020010181815250505b5050505050565b604080516001600160a01b0384166020820152908101829052606001604051602081830303815290604052609b90816109e79190611fc0565b604080516001600160a01b03808616602083015284169181019190915260608101829052608001604051602081830303815290604052609b90816116f59190611fc0565b50505050565b604080516001600160a01b038681166020830152858116828401528416606082015260808082018490528251808303909101815260a0909101909152609b906116719082611fc0565b604080516001600160a01b0384811660208301528316818301528151808203830181526060909101909152600090609b9061177f9082611fc0565b5092915050565b604080516001600160a01b038316602082015260009101604051602081830303815290604052609b90816117ba9190611fc0565b50919050565b604080516020810183905201604051602081830303815290604052609b90816108c69190611fc0565b604080516001600160a01b03808716602083015291810185905290831660608201526080810182905260009060a001604051602081830303815290604052609b90816118359190611fc0565b50949350505050565b604080516001600160a01b0380881660208301529181018690528185166060820152908316608082015260a0810182905260009060c001604051602081830303815290604052609b90816118929190611fc0565b5095945050505050565b60006001600160a01b0383166118c557604051630306120160e01b815260040160405180910390fd5b6040516363737ac960e11b8152600481018390526001600160a01b0384169063c6e6f592906024015b602060405180830381865afa15801561190b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192f9190612080565b9392505050565b60006001600160a01b03831661195f57604051630306120160e01b815260040160405180910390fd5b6040516303d1689d60e11b8152600481018390526001600160a01b038416906307a2d13a906024016118ee565b6001600160a01b0381168114610baf57600080fd5b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156119da576119da6119a1565b60405290565b803562ffffff811681146119f357600080fd5b919050565b600080600083850360c0811215611a0e57600080fd5b8435611a198161198c565b93506020850135611a298161198c565b92506080603f1982011215611a3d57600080fd5b506040516080810181811067ffffffffffffffff82111715611a6157611a616119a1565b604090815285013560048110611a7657600080fd5b81526060850135611a868161198c565b6020820152611a97608086016119e0565b6040820152611aa860a086016119e0565b6060820152809150509250925092565b60008060408385031215611acb57600080fd5b8235611ad68161198c565b91506020830135611ae68161198c565b809150509250929050565b6000815180845260005b81811015611b1757602081850181015186830182015201611afb565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061192f6020830184611af1565b60008060208385031215611b5d57600080fd5b823567ffffffffffffffff80821115611b7557600080fd5b818501915085601f830112611b8957600080fd5b813581811115611b9857600080fd5b8660208260051b8501011115611bad57600080fd5b60209290920196919550909350505050565b600060208284031215611bd157600080fd5b813561192f8161198c565b634e487b7160e01b600052602160045260246000fd5b600060208284031215611c0457600080fd5b8151801515811461192f57600080fd5b600181811c90821680611c2857607f821691505b6020821081036117ba57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008235603e19833603018112611c7457600080fd5b9190910192915050565b6000808335601e19843603018112611c9557600080fd5b83018035915067ffffffffffffffff821115611cb057600080fd5b602001915036819003821315611cc557600080fd5b9250929050565b828152604060208201526000611ce56040830184611af1565b949350505050565b60408101818360005b6002811015611d1e5781516001600160a01b0316835260209283019290910190600101611cf6565b50505092915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082601f830112611d8357600080fd5b813567ffffffffffffffff80821115611d9e57611d9e6119a1565b604051601f8301601f19908116603f01168101908282118183101715611dc657611dc66119a1565b81604052838152866020858801011115611ddf57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611e1157600080fd5b813567ffffffffffffffff80821115611e2957600080fd5b9083019060c08286031215611e3d57600080fd5b611e456119b7565b8235611e508161198c565b81526020830135611e608161198c565b6020820152604083013560028110611e7757600080fd5b80604083015250606083013560608201526080830135608082015260a083013582811115611ea457600080fd5b611eb087828601611d72565b60a08301525095945050505050565b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156107db576107db611ebf565b60ff818116838216029081169081811461177f5761177f611ebf565b6001600160a01b03878116825286166020820152600060028610611f3e57634e487b7160e01b600052602160045260246000fd5b85604083015284606083015283608083015260c060a0830152611f6460c0830184611af1565b98975050505050505050565b601f8211156109e7576000816000526020600020601f850160051c81016020861015611f995750805b601f850160051c820191505b81811015611fb857828155600101611fa5565b505050505050565b815167ffffffffffffffff811115611fda57611fda6119a1565b611fee81611fe88454611c14565b84611f70565b602080601f831160018114612023576000841561200b5750858301515b600019600386901b1c1916600185901b178555611fb8565b600085815260208120601f198616915b8281101561205257888601518255948401946001909101908401612033565b50858210156120705787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561209257600080fd5b505191905056fea2646970667358221220051f4eeeaf66482b65430ae6dce37f341f9936f61898b084a8cfcc664a13351364736f6c63430008180033';

type VaultRouterMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultRouterMockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultRouterMock__factory extends ContractFactory {
  constructor(...args: VaultRouterMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VaultRouterMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VaultRouterMock__factory {
    return super.connect(runner) as VaultRouterMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultRouterMockInterface {
    return new Interface(_abi) as VaultRouterMockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VaultRouterMock {
    return new Contract(address, _abi, runner) as unknown as VaultRouterMock;
  }
}
