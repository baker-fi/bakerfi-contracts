/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../../common';
import type {
  MockFlashLender,
  MockFlashLenderInterface,
} from '../../../../contracts/mocks/ERC3156FlashLender.sol/MockFlashLender';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'asset',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CALLBACK_SUCCESS',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'flashFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC3156FlashBorrower',
        name: 'borrower',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'flashLoan',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFlashLoanFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxFlashLoan',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
    ],
    name: 'setFlashLoanFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6080604052620f424060015534801561001757600080fd5b50604051610aae380380610aae8339810160408190526100369161005b565b600080546001600160a01b0319166001600160a01b039290921691909117905561008b565b60006020828403121561006d57600080fd5b81516001600160a01b038116811461008457600080fd5b9392505050565b610a148061009a6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80635cffe9de14610067578063613255ab1461008f5780638237e538146100b0578063d9d98ce4146100d7578063e92d0d5d146100ea578063fd90c2be146100ff575b600080fd5b61007a610075366004610771565b610107565b60405190151581526020015b60405180910390f35b6100a261009d366004610810565b6103b5565b604051908152602001610086565b6100a27f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd981565b6100a26100e536600461082d565b610428565b6100fd6100f8366004610859565b600155565b005b6001546100a2565b600080633b9aca006001548661011d9190610888565b610127919061089f565b600080546040516370a0823160e01b815230600482015292935090916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610175573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019991906108c1565b9050858110156101fc5760405162461bcd60e51b815260206004820152602360248201527f4e6f2042616c616e636520617661696c61626c6520666f7220666c617368206c6044820152621bd85960ea1b60648201526084015b60405180910390fd5b600054610213906001600160a01b0316898861044e565b6040516323e30c8b60e01b81527f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9906001600160a01b038a16906323e30c8b9061026b9033908c908c9089908d908d906004016108da565b6020604051808303816000875af115801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae91906108c1565b146102fb5760405162461bcd60e51b815260206004820152601e60248201527f466c617368426f72726f7765723a2043616c6c6261636b206661696c6564000060448201526064016101f3565b6103058683610936565b600054604051636eb1769f60e11b81526001600160a01b038b811660048301523060248301529091169063dd62ed3e90604401602060405180830381865afa158015610355573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037991906108c1565b101561038457600080fd5b6103a78830610393858a610936565b6000546001600160a01b03169291906104b6565b506001979650505050505050565b600080546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156103fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042291906108c1565b92915050565b6000633b9aca006001548361043d9190610888565b610447919061089f565b9392505050565b6040516001600160a01b0383166024820152604481018290526104b190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526104f4565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526104ee9085906323b872dd60e01b9060840161047a565b50505050565b6000610549826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166105c99092919063ffffffff16565b905080516000148061056a57508080602001905181019061056a9190610949565b6104b15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101f3565b60606105d884846000856105e0565b949350505050565b6060824710156106415760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101f3565b600080866001600160a01b0316858760405161065d919061098f565b60006040518083038185875af1925050503d806000811461069a576040519150601f19603f3d011682016040523d82523d6000602084013e61069f565b606091505b50915091506106b0878383876106bb565b979650505050505050565b6060831561072a578251600003610723576001600160a01b0385163b6107235760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101f3565b50816105d8565b6105d8838381511561073f5781518083602001fd5b8060405162461bcd60e51b81526004016101f391906109ab565b6001600160a01b038116811461076e57600080fd5b50565b60008060008060006080868803121561078957600080fd5b853561079481610759565b945060208601356107a481610759565b935060408601359250606086013567ffffffffffffffff808211156107c857600080fd5b818801915088601f8301126107dc57600080fd5b8135818111156107eb57600080fd5b8960208285010111156107fd57600080fd5b9699959850939650602001949392505050565b60006020828403121561082257600080fd5b813561044781610759565b6000806040838503121561084057600080fd5b823561084b81610759565b946020939093013593505050565b60006020828403121561086b57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761042257610422610872565b6000826108bc57634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156108d357600080fd5b5051919050565b6001600160a01b03878116825286166020820152604081018590526060810184905260a06080820181905281018290526000828460c0840137600060c0848401015260c0601f19601f8501168301019050979650505050505050565b8082018082111561042257610422610872565b60006020828403121561095b57600080fd5b8151801515811461044757600080fd5b60005b8381101561098657818101518382015260200161096e565b50506000910152565b600082516109a181846020870161096b565b9190910192915050565b60208152600082518060208401526109ca81604085016020870161096b565b601f01601f1916919091016040019291505056fea2646970667358221220cdd86ed421253da465c63c3c4b696c060eb16a9a04f4890d4c4f2545f73352dd64736f6c63430008180033';

type MockFlashLenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockFlashLenderConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockFlashLender__factory extends ContractFactory {
  constructor(...args: MockFlashLenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    asset: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(asset, overrides || {});
  }
  override deploy(asset: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(asset, overrides || {}) as Promise<
      MockFlashLender & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockFlashLender__factory {
    return super.connect(runner) as MockFlashLender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockFlashLenderInterface {
    return new Interface(_abi) as MockFlashLenderInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockFlashLender {
    return new Contract(address, _abi, runner) as unknown as MockFlashLender;
  }
}
