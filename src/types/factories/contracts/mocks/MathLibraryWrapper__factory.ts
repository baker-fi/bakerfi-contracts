/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MathLibraryWrapper,
  MathLibraryWrapperInterface,
} from "../../../contracts/mocks/MathLibraryWrapper";

const _abi = [
  {
    inputs: [],
    name: "InvalidDivDenominator",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowDetected",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "mulDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "mulDivDown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "mulDivUp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "from",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "to",
        type: "uint8",
      },
    ],
    name: "toDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "converted",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610556806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806312bd6ac0146100515780638f69115014610076578063b67bee0414610089578063fb9f49171461009c575b600080fd5b61006461005f3660046102d5565b6100af565b60405190815260200160405180910390f35b610064610084366004610317565b6100c6565b6100646100973660046102d5565b6100d3565b6100646100aa366004610353565b6100e0565b60006100bc8484846100f7565b90505b9392505050565b60006100bc84848461016a565b60006100bc84848461025f565b60006100ee858585856102b3565b95945050505050565b60008061010484866103af565b90508260000361012757604051639124a73d60e01b815260040160405180910390fd5b841580610132575083155b156101415760009150506100bf565b8261014d6001836103cc565b61015791906103df565b610162906001610401565b9150506100bf565b60008160ff168360ff1611156101cd5760406101868385610414565b60ff16106101a757604051637883ad3d60e11b815260040160405180910390fd5b6101b18284610414565b6101bc90600a610511565b6101c690856103df565b90506100bf565b8260ff168260ff1611156102575760406101e78484610414565b60ff161061020857604051637883ad3d60e11b815260040160405180910390fd5b60006102148484610414565b61021f90600a610511565b905061022d816000196103df565b85111561024d57604051637883ad3d60e11b815260040160405180910390fd5b61016281866103af565b509192915050565b60008061026c84866103af565b90508260000361028f57604051639124a73d60e01b815260040160405180910390fd5b84158061029a575083155b156102a95760009150506100bf565b61016283826103df565b6000816102ca576102c585858561025f565b6100ee565b6100ee8585856100f7565b6000806000606084860312156102ea57600080fd5b505081359360208301359350604090920135919050565b803560ff8116811461031257600080fd5b919050565b60008060006060848603121561032c57600080fd5b8335925061033c60208501610301565b915061034a60408501610301565b90509250925092565b6000806000806080858703121561036957600080fd5b8435935060208501359250604085013591506060850135801515811461038e57600080fd5b939692955090935050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103c6576103c6610399565b92915050565b818103818111156103c6576103c6610399565b6000826103fc57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156103c6576103c6610399565b60ff82811682821603908111156103c6576103c6610399565b600181815b8085111561046857816000190482111561044e5761044e610399565b8085161561045b57918102915b93841c9390800290610432565b509250929050565b60008261047f575060016103c6565b8161048c575060006103c6565b81600181146104a257600281146104ac576104c8565b60019150506103c6565b60ff8411156104bd576104bd610399565b50506001821b6103c6565b5060208310610133831016604e8410600b84101617156104eb575081810a6103c6565b6104f5838361042d565b806000190482111561050957610509610399565b029392505050565b60006100bf60ff84168361047056fea2646970667358221220660b73d629a8308e48ad5f0c392fb5a4b94fd4d9b2354ae9ff172077762d3c2f64736f6c63430008180033";

type MathLibraryWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MathLibraryWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MathLibraryWrapper__factory extends ContractFactory {
  constructor(...args: MathLibraryWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MathLibraryWrapper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MathLibraryWrapper__factory {
    return super.connect(runner) as MathLibraryWrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MathLibraryWrapperInterface {
    return new Interface(_abi) as MathLibraryWrapperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MathLibraryWrapper {
    return new Contract(address, _abi, runner) as unknown as MathLibraryWrapper;
  }
}
