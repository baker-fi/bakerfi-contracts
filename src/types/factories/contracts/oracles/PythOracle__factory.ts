/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type { PythOracle, PythOracleInterface } from '../../../contracts/oracles/PythOracle';

const _abi = [
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'priceID',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'pythContract',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InvalidPriceAnswer',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidPriceOption',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidPriceUpdate',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoEnoughFee',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PriceOutdated',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'priceUpdateData',
        type: 'bytes',
      },
    ],
    name: 'getAndUpdatePrice',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'lastUpdate',
            type: 'uint256',
          },
        ],
        internalType: 'struct IOracle.Price',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLatestPrice',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'lastUpdate',
            type: 'uint256',
          },
        ],
        internalType: 'struct IOracle.Price',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPrecision',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'maxAge',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxConf',
            type: 'uint256',
          },
        ],
        internalType: 'struct IOracle.PriceOptions',
        name: 'priceOptions',
        type: 'tuple',
      },
    ],
    name: 'getSafeLatestPrice',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'price',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'lastUpdate',
            type: 'uint256',
          },
        ],
        internalType: 'struct IOracle.Price',
        name: 'price',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c060405234801561001057600080fd5b50604051610b12380380610b1283398101604081905261002f91610043565b6001600160a01b031660805260a052610080565b6000806040838503121561005657600080fd5b825160208401519092506001600160a01b038116811461007557600080fd5b809150509250929050565b60805160a051610a516100c1600039600081816103b201526104670152600081816101e7015281816102ac015281816103e0015261048d0152610a516000f3fe60806040526004361061003f5760003560e01c806304341d99146100445780638e15f473146100845780639670c0bc14610099578063f3903cd5146100bc575b600080fd5b34801561005057600080fd5b5061006461005f366004610657565b6100cf565b604080518251815260209283015192810192909252015b60405180910390f35b34801561009057600080fd5b506100646100f2565b3480156100a557600080fd5b50604051670de0b6b3a7640000815260200161007b565b6100646100ca3660046106b4565b61012a565b60408051808201909152600080825260208201526100ec82610383565b92915050565b60408051808201909152600080825260208201526101256040518060400160405280600081526020016000815250610383565b905090565b604080518082019091526000808252602082015260008290036101605760405163a2a039d160e01b815260040160405180910390fd5b604080516001808252818301909252600091816020015b606081526020019060019003908161017757905050905083838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052508551869450909250151590506101d8576101d8610726565b602002602001018190525060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d47eed45836040518263ffffffff1660e01b8152600401610231919061073c565b602060405180830381865afa15801561024e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027291906107ce565b90508034101561029557604051636990f5e560e11b815260040160405180910390fd5b604051631df3cbc560e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ef9e5e289083906102e390869060040161073c565b6000604051808303818588803b1580156102fc57600080fd5b505af1158015610310573d6000803e3d6000fd5b50505050506000813461032391906107fd565b9050801561035a57604051339082156108fc029083906000818181858888f19350505050158015610358573d6000803e3d6000fd5b505b6103796040518060400160405280600081526020016000815250610383565b9695505050505050565b604080518082019091526000808252602082015281516000901561045857825160405163052571af60e51b81527f0000000000000000000000000000000000000000000000000000000000000000600482015260248101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a4ae35e090604401608060405180830381865afa15801561042f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104539190610810565b610500565b6040516396834ad360e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396834ad390602401608060405180830381865afa1580156104dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105009190610810565b90506000816000015160070b1280610576575060208301511580159061053457506000816020015167ffffffffffffffff16115b8015610576575060208301518151633b9aca009161055b9167ffffffffffffffff166108b5565b61056591906108cc565b816020015167ffffffffffffffff16115b8061058857506014816040015160030b135b8061059b5750601319816040015160030b125b156105b957604051633ba0fb6b60e01b815260040160405180910390fd5b6000816040015160030b126106065760408101516105de9063ffffffff1660126108ee565b6105e990600a6109e5565b81516105ff919067ffffffffffffffff166108b5565b8252610649565b8060400151610614906109f8565b6106259063ffffffff1660126107fd565b61063090600a6109e5565b8151610646919067ffffffffffffffff166108b5565b82525b606001516020820152919050565b60006040828403121561066957600080fd5b6040516040810181811067ffffffffffffffff8211171561069a57634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b600080602083850312156106c757600080fd5b823567ffffffffffffffff808211156106df57600080fd5b818501915085601f8301126106f357600080fd5b81358181111561070257600080fd5b86602082850101111561071457600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052603260045260246000fd5b6000602080830181845280855180835260408601915060408160051b87010192508387016000805b838110156107c057888603603f1901855282518051808852835b81811015610799578281018a01518982018b0152890161077e565b508781018901849052601f01601f1916909601870195509386019391860191600101610764565b509398975050505050505050565b6000602082840312156107e057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156100ec576100ec6107e7565b60006080828403121561082257600080fd5b6040516080810167ffffffffffffffff828210818311171561085457634e487b7160e01b600052604160045260246000fd5b81604052845191508160070b821461086b57600080fd5b908252602084015190808216821461088257600080fd5b5060208201526040830151600381900b811461089d57600080fd5b60408201526060928301519281019290925250919050565b80820281158282048414176100ec576100ec6107e7565b6000826108e957634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156100ec576100ec6107e7565b600181815b8085111561093c578160001904821115610922576109226107e7565b8085161561092f57918102915b93841c9390800290610906565b509250929050565b600082610953575060016100ec565b81610960575060006100ec565b816001811461097657600281146109805761099c565b60019150506100ec565b60ff841115610991576109916107e7565b50506001821b6100ec565b5060208310610133831016604e8410600b84101617156109bf575081810a6100ec565b6109c98383610901565b80600019048211156109dd576109dd6107e7565b029392505050565b60006109f18383610944565b9392505050565b60008160030b637fffffff198103610a1257610a126107e7565b6000039291505056fea26469706673582212208a027203b5397e20a26b054362d19fd76f05a2d4c8318712073fa3522b28816064736f6c63430008180033';

type PythOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PythOracleConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PythOracle__factory extends ContractFactory {
  constructor(...args: PythOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    priceID: BytesLike,
    pythContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(priceID, pythContract, overrides || {});
  }
  override deploy(
    priceID: BytesLike,
    pythContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(priceID, pythContract, overrides || {}) as Promise<
      PythOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PythOracle__factory {
    return super.connect(runner) as PythOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PythOracleInterface {
    return new Interface(_abi) as PythOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PythOracle {
    return new Contract(address, _abi, runner) as unknown as PythOracle;
  }
}
