/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CustomExRateOracle,
  CustomExRateOracleInterface,
} from "../../../contracts/oracles/CustomExRateOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IOracle",
        name: "baseOracle",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct CustomExRateOracle.Call",
        name: "call",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "resultDecimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidPriceFromOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPriceUpdatedAt",
    type: "error",
  },
  {
    inputs: [],
    name: "OverflowDetected",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceOutdated",
    type: "error",
  },
  {
    inputs: [],
    name: "getLatestPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdate",
            type: "uint256",
          },
        ],
        internalType: "struct IOracle.Price",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrecision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getRatio",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdate",
            type: "uint256",
          },
        ],
        internalType: "struct IOracle.Price",
        name: "ratio",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxAge",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxConf",
            type: "uint256",
          },
        ],
        internalType: "struct IOracle.PriceOptions",
        name: "priceOptions",
        type: "tuple",
      },
    ],
    name: "getSafeLatestPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdate",
            type: "uint256",
          },
        ],
        internalType: "struct IOracle.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162000bea38038062000bea833981016040819052620000349162000195565b6001600160a01b03831660808190526040805163259c302f60e21b81529051859291639670c0bc9160048083019260209291908290030181865afa15801562000081573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000a79190620002b5565b60a052508151600080546001600160a01b0319166001600160a01b0390921691909117905560ff811660c0526020820151600190620000e7908262000360565b505050506200042c565b6001600160a01b03811681146200010757600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156200014557620001456200010a565b60405290565b604051601f8201601f191681016001600160401b03811182821017156200017657620001766200010a565b604052919050565b805160ff811681146200019057600080fd5b919050565b600080600060608486031215620001ab57600080fd5b8351620001b881620000f1565b602085810151919450906001600160401b0380821115620001d857600080fd5b9086019060408289031215620001ed57600080fd5b620001f762000120565b82516200020481620000f1565b815282840151828111156200021857600080fd5b80840193505088601f8401126200022e57600080fd5b8251828111156200024357620002436200010a565b62000257601f8201601f191686016200014b565b925080835289858286010111156200026e57600080fd5b60005b818110156200028e57848101860151848201870152850162000271565b50600090830185015292830152509150620002ac604085016200017e565b90509250925092565b600060208284031215620002c857600080fd5b5051919050565b600181811c90821680620002e457607f821691505b6020821081036200030557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035b576000816000526020600020601f850160051c81016020861015620003365750805b601f850160051c820191505b81811015620003575782815560010162000342565b5050505b505050565b81516001600160401b038111156200037c576200037c6200010a565b62000394816200038d8454620002cf565b846200030b565b602080601f831160018114620003cc5760008415620003b35750858301515b600019600386901b1c1916600185901b17855562000357565b600085815260208120601f198616915b82811015620003fd57888601518255948401946001909101908401620003dc565b50858210156200041c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c0516107876200046360003960006101af01526000610329015260008181610219015261029501526107876000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806304341d99146100515780638e15f4731461007a5780639670c0bc14610082578063ec1ebd7a14610098575b600080fd5b61006461005f3660046104c1565b6100a0565b60405161007191906104f3565b60405180910390f35b6100646100c3565b604051670de0b6b3a76400008152602001610071565b6100646100fb565b60408051808201909152600080825260208201526100bd826101e4565b92915050565b60408051808201909152600080825260208201526100f660405180604001604052806000815260200160008152506101e4565b905090565b60408051808201909152600080825260208201526000805460405182916001600160a01b03169061012e9060019061050a565b600060405180830381855afa9150503d8060008114610169576040519150601f19603f3d011682016040523d82523d6000602084013e61016e565b606091505b50915091508161019157604051636f4f5ab960e01b815260040160405180910390fd5b6000818060200190518101906101a791906105ab565b90506101d5817f0000000000000000000000000000000000000000000000000000000000000000601261038b565b84525050600060208301525090565b6040805180820190915260008082526020820152815160009015610293576040516304341d9960e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906304341d999061024e9086906004016104f3565b6040805180830381865afa15801561026a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028e91906105c4565b610314565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638e15f4736040518163ffffffff1660e01b81526004016040805180830381865afa1580156102f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031491906105c4565b905060006103206100fb565b825181519192507f000000000000000000000000000000000000000000000000000000000000000091610353919061060c565b61035d9190610623565b8352602080820151908301511161037857806020015161037e565b81602001515b6020840152509092915050565b60008160ff168360ff1611156103ee5760406103a78385610645565b60ff16106103c857604051637883ad3d60e11b815260040160405180910390fd5b6103d28284610645565b6103dd90600a610742565b6103e79085610623565b9050610483565b8260ff168260ff1611156104805760406104088484610645565b60ff161061042957604051637883ad3d60e11b815260040160405180910390fd5b60006104358484610645565b61044090600a610742565b905061044e81600019610623565b85111561046e57604051637883ad3d60e11b815260040160405180910390fd5b610478818661060c565b915050610483565b50825b9392505050565b6040805190810167ffffffffffffffff811182821017156104bb57634e487b7160e01b600052604160045260246000fd5b60405290565b6000604082840312156104d357600080fd5b6104db61048a565b82358152602083013560208201528091505092915050565b8151815260208083015190820152604081016100bd565b60008083548160018260011c9150600183168061052857607f831692505b6020808410820361054757634e487b7160e01b86526022600452602486fd5b81801561055b57600181146105705761059d565b60ff198616895284151585028901965061059d565b60008a81526020902060005b868110156105955781548b82015290850190830161057c565b505084890196505b509498975050505050505050565b6000602082840312156105bd57600080fd5b5051919050565b6000604082840312156105d657600080fd5b6105de61048a565b82518152602083015160208201528091505092915050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176100bd576100bd6105f6565b60008261064057634e487b7160e01b600052601260045260246000fd5b500490565b60ff82811682821603908111156100bd576100bd6105f6565b600181815b8085111561069957816000190482111561067f5761067f6105f6565b8085161561068c57918102915b93841c9390800290610663565b509250929050565b6000826106b0575060016100bd565b816106bd575060006100bd565b81600181146106d357600281146106dd576106f9565b60019150506100bd565b60ff8411156106ee576106ee6105f6565b50506001821b6100bd565b5060208310610133831016604e8410600b841016171561071c575081810a6100bd565b610726838361065e565b806000190482111561073a5761073a6105f6565b029392505050565b600061048360ff8416836106a156fea2646970667358221220102c60b3a0bb73666cfcb7d107581c6951124a80764c434c6ada9c4103555bfe64736f6c63430008180033";

type CustomExRateOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CustomExRateOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CustomExRateOracle__factory extends ContractFactory {
  constructor(...args: CustomExRateOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    baseOracle: AddressLike,
    call: CustomExRateOracle.CallStruct,
    resultDecimals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      baseOracle,
      call,
      resultDecimals,
      overrides || {}
    );
  }
  override deploy(
    baseOracle: AddressLike,
    call: CustomExRateOracle.CallStruct,
    resultDecimals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      baseOracle,
      call,
      resultDecimals,
      overrides || {}
    ) as Promise<
      CustomExRateOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CustomExRateOracle__factory {
    return super.connect(runner) as CustomExRateOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CustomExRateOracleInterface {
    return new Interface(_abi) as CustomExRateOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CustomExRateOracle {
    return new Contract(address, _abi, runner) as unknown as CustomExRateOracle;
  }
}
