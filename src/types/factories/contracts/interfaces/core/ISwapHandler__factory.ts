/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from 'ethers';
import type {
  ISwapHandler,
  ISwapHandlerInterface,
} from '../../../../contracts/interfaces/core/ISwapHandler';

const _abi = [
  {
    inputs: [],
    name: 'InvalidInputToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidOutputToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SwapFailed',
    type: 'error',
  },
] as const;

export class ISwapHandler__factory {
  static readonly abi = _abi;
  static createInterface(): ISwapHandlerInterface {
    return new Interface(_abi) as ISwapHandlerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ISwapHandler {
    return new Contract(address, _abi, runner) as unknown as ISwapHandler;
  }
}
