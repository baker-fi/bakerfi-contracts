/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../../common';
import type {
  BalancerFlashLender,
  BalancerFlashLenderInterface,
} from '../../../../contracts/core/flashloan/BalancerFlashLender';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'balancerVault',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'BorrowerCallbackFailed',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidAmountList',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidBorrower',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidDivDenominator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidFeesAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidFlashLoadLender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenList',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidVaultAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoAllowanceToPayDebt',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CALLBACK_SUCCESS',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'flashFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC3156FlashBorrowerUpgradeable',
        name: 'borrower',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'flashLoan',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'maxFlashLoan',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'feeAmounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'userData',
        type: 'bytes',
      },
    ],
    name: 'receiveFlashLoan',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a060405234801561001057600080fd5b506040516111c03803806111c083398101604081905261002f91610061565b6001600160a01b038116608081905261005b57604051630306120160e01b815260040160405180910390fd5b50610091565b60006020828403121561007357600080fd5b81516001600160a01b038116811461008a57600080fd5b9392505050565b6080516110f86100c8600039600081816101b40152818161027e0152818161030001528181610423015261070001526110f86000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635cffe9de1461005c578063613255ab146100845780638237e538146100a5578063d9d98ce4146100cc578063f04f2707146100df575b600080fd5b61006f61006a366004610a77565b6100f4565b60405190151581526020015b60405180910390f35b610097610092366004610b16565b610267565b60405190815260200161007b565b6100977f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd981565b6100976100da366004610b33565b6102fb565b6100f26100ed366004610cb2565b610418565b005b6000336001600160a01b0387161461011f57604051636f5f81d760e01b815260040160405180910390fd5b60408051600180825281830190925260009160208083019080368337019050509050858160008151811061015557610155610dbd565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905085816000815181106101a6576101a6610dbd565b6020026020010181815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c38449e3084848c8a8a6040516020016101f993929190610dd3565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016102279493929190610e63565b600060405180830381600087803b15801561024157600080fd5b505af1158015610255573d6000803e3d6000fd5b5060019b9a5050505050505050505050565b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600091908316906370a0823190602401602060405180830381865afa1580156102d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f59190610eff565b92915050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d2946c2b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561035c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103809190610f18565b6001600160a01b031663d877845c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e19190610eff565b90508015806103ee575082155b156103fd5760009150506102f5565b6104108382670de0b6b3a7640000610746565b949350505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104615760405163941d9b5160e01b815260040160405180910390fd5b835160011461048357604051637bbec00360e01b815260040160405180910390fd5b82516001146104a55760405163cbf950ff60e01b815260040160405180910390fd5b81516001146104c75760405163fe6ad16160e01b815260040160405180910390fd5b600080828060200190518101906104de9190610f35565b915091506000866000815181106104f7576104f7610dbd565b6020026020010151905060008660008151811061051657610516610dbd565b6020026020010151905060008660008151811061053557610535610dbd565b6020026020010151905061055d8583856001600160a01b03166107bc9092919063ffffffff16565b7f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9856001600160a01b03166323e30c8b878c6000815181106105a1576105a1610dbd565b60200260200101518c6000815181106105bc576105bc610dbd565b60200260200101518c6000815181106105d7576105d7610dbd565b60200260200101518a6040518663ffffffff1660e01b8152600401610600959493929190610fc2565b6020604051808303816000875af115801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190610eff565b1461066157604051637ab2c85b60e11b815260040160405180910390fd5b61066b8282611012565b604051636eb1769f60e11b81526001600160a01b03878116600483015230602483015285169063dd62ed3e90604401602060405180830381865afa1580156106b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106db9190610eff565b10156106fa5760405163b2574d8160e01b815260040160405180910390fd5b61073b857f00000000000000000000000000000000000000000000000000000000000000006107298486611012565b6001600160a01b038716929190610824565b505050505050505050565b6000806107538486611025565b90508260000361077657604051639124a73d60e01b815260040160405180910390fd5b841580610781575083155b156107905760009150506107b5565b8261079c60018361103c565b6107a6919061104f565b6107b1906001611012565b9150505b9392505050565b6040516001600160a01b03831660248201526044810182905261081f90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610862565b505050565b6040516001600160a01b038085166024830152831660448201526064810182905261085c9085906323b872dd60e01b906084016107e8565b50505050565b60006108b7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661093c9092919063ffffffff16565b90508051600014806108d85750808060200190518101906108d89190611071565b61081f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6060610410848460008585600080866001600160a01b031685876040516109639190611093565b60006040518083038185875af1925050503d80600081146109a0576040519150601f19603f3d011682016040523d82523d6000602084013e6109a5565b606091505b50915091506109b6878383876109c1565b979650505050505050565b60608315610a30578251600003610a29576001600160a01b0385163b610a295760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610933565b5081610410565b6104108383815115610a455781518083602001fd5b8060405162461bcd60e51b815260040161093391906110af565b6001600160a01b0381168114610a7457600080fd5b50565b600080600080600060808688031215610a8f57600080fd5b8535610a9a81610a5f565b94506020860135610aaa81610a5f565b935060408601359250606086013567ffffffffffffffff80821115610ace57600080fd5b818801915088601f830112610ae257600080fd5b813581811115610af157600080fd5b896020828501011115610b0357600080fd5b9699959850939650602001949392505050565b600060208284031215610b2857600080fd5b81356107b581610a5f565b60008060408385031215610b4657600080fd5b8235610b5181610a5f565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b9e57610b9e610b5f565b604052919050565b600067ffffffffffffffff821115610bc057610bc0610b5f565b5060051b60200190565b600082601f830112610bdb57600080fd5b81356020610bf0610beb83610ba6565b610b75565b8083825260208201915060208460051b870101935086841115610c1257600080fd5b602086015b84811015610c2e5780358352918301918301610c17565b509695505050505050565b600067ffffffffffffffff821115610c5357610c53610b5f565b50601f01601f191660200190565b600082601f830112610c7257600080fd5b8135610c80610beb82610c39565b818152846020838601011115610c9557600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215610cc857600080fd5b843567ffffffffffffffff80821115610ce057600080fd5b818701915087601f830112610cf457600080fd5b81356020610d04610beb83610ba6565b82815260059290921b8401810191818101908b841115610d2357600080fd5b948201945b83861015610d4a578535610d3b81610a5f565b82529482019490820190610d28565b98505088013592505080821115610d6057600080fd5b610d6c88838901610bca565b94506040870135915080821115610d8257600080fd5b610d8e88838901610bca565b93506060870135915080821115610da457600080fd5b50610db187828801610c61565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b60005b83811015610e2e578181015183820152602001610e16565b50506000910152565b60008151808452610e4f816020860160208601610e13565b601f01601f19169290920160200192915050565b6001600160a01b0385811682526080602080840182905286519184018290526000928782019290919060a0860190855b81811015610eb1578551851683529483019491830191600101610e93565b5050858103604087015287518082529082019350915080870160005b83811015610ee957815185529382019390820190600101610ecd565b5050505082810360608401526109b68185610e37565b600060208284031215610f1157600080fd5b5051919050565b600060208284031215610f2a57600080fd5b81516107b581610a5f565b60008060408385031215610f4857600080fd5b8251610f5381610a5f565b602084015190925067ffffffffffffffff811115610f7057600080fd5b8301601f81018513610f8157600080fd5b8051610f8f610beb82610c39565b818152866020838501011115610fa457600080fd5b610fb5826020830160208601610e13565b8093505050509250929050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906109b690830184610e37565b634e487b7160e01b600052601160045260246000fd5b808201808211156102f5576102f5610ffc565b80820281158282048414176102f5576102f5610ffc565b818103818111156102f5576102f5610ffc565b60008261106c57634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561108357600080fd5b815180151581146107b557600080fd5b600082516110a5818460208701610e13565b9190910192915050565b6020815260006107b56020830184610e3756fea2646970667358221220366265f4ea4820122ec2d467ab8e4f1c734dcc2fc71cda887f762240f53873e864736f6c63430008180033';

type BalancerFlashLenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerFlashLenderConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerFlashLender__factory extends ContractFactory {
  constructor(...args: BalancerFlashLenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    balancerVault: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(balancerVault, overrides || {});
  }
  override deploy(balancerVault: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(balancerVault, overrides || {}) as Promise<
      BalancerFlashLender & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BalancerFlashLender__factory {
    return super.connect(runner) as BalancerFlashLender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerFlashLenderInterface {
    return new Interface(_abi) as BalancerFlashLenderInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BalancerFlashLender {
    return new Contract(address, _abi, runner) as unknown as BalancerFlashLender;
  }
}
