/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../../../common';
import type {
  UseIERC4626Mock,
  UseIERC4626MockInterface,
} from '../../../../../contracts/core/hooks/UseIERC4626.sol/UseIERC4626Mock';

const _abi = [
  {
    inputs: [],
    name: 'CallerNotTheGovernor',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedToApproveAllowanceForVault',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidGovernorAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidVaultAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageTooHigh',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernor',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernor',
        type: 'address',
      },
    ],
    name: 'GovernshipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'approveTokenForVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'initialOwner',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'isTokenApprovedForVault',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'minShares',
        type: 'uint256',
      },
    ],
    name: 'test__depositVault',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'maxAssets',
        type: 'uint256',
      },
    ],
    name: 'test__mintVault',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'minAssets',
        type: 'uint256',
      },
    ],
    name: 'test__redeemVault',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'maxShares',
        type: 'uint256',
      },
    ],
    name: 'test__withdrawVault',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newGovernor',
        type: 'address',
      },
    ],
    name: 'transferGovernorship',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'unapproveTokenForVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50610bea806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638e791f751161008c578063b26c9b9211610066578063b26c9b92146101d2578063b6aa515b146101e5578063c4d66de8146101f8578063f2fde38b1461020b57600080fd5b80638e791f7514610160578063953d4da014610173578063ae7d2e3c1461018657600080fd5b80630c340a24146100d45780630cac6925146100fe57806339bc9c5c1461011f5780635fefe72f14610134578063715018a6146101475780638da5cb5b1461014f575b600080fd5b6065546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61011161010c366004610a79565b61021e565b6040519081526020016100f5565b61013261012d366004610ac1565b610237565b005b610111610142366004610a79565b610320565b61013261032e565b6033546001600160a01b03166100e1565b61013261016e366004610ac1565b610342565b610111610181366004610afa565b6103c7565b6101c2610194366004610ac1565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b60405190151581526020016100f5565b6101116101e0366004610afa565b6103e2565b6101326101f3366004610b55565b6103f1565b610132610206366004610b55565b61044f565b610132610219366004610b55565b610566565b600061022c858585856105dc565b90505b949350505050565b6065546001600160a01b031633146102625760405163e6e025c760e01b815260040160405180910390fd5b6001600160a01b0382811660008181526066602090815260408083209486168084529490915290819020805460ff191660011790555163095ea7b360e01b81526004810191909152600019602482015263095ea7b3906044015b6020604051808303816000875af11580156102db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ff9190610b79565b61031c576040516376e540db60e01b815260040160405180910390fd5b5050565b600061022c8585858561069b565b61033661075a565b61034060006107b4565b565b6065546001600160a01b0316331461036d5760405163e6e025c760e01b815260040160405180910390fd5b6001600160a01b0382811660008181526066602090815260408083209486168084529490915290819020805460ff191690555163095ea7b360e01b815260048101919091526001602482015263095ea7b3906044016102bc565b60006103d68686868686610806565b90505b95945050505050565b60006103d686868686866108cd565b6065546001600160a01b0316331461041c5760405163e6e025c760e01b815260040160405180910390fd5b6001600160a01b0381166104435760405163fa68714160e01b815260040160405180910390fd5b61044c81610994565b50565b600054610100900460ff161580801561046f5750600054600160ff909116105b806104895750303b158015610489575060005460ff166001145b6104f15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610514576000805461ff0019166101001790555b61051d826109f0565b801561031c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b61056e61075a565b6001600160a01b0381166105d35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e8565b61044c816107b4565b60006001600160a01b03851661060557604051630306120160e01b815260040160405180910390fd5b604051636e553f6560e01b8152600481018590526001600160a01b038481166024830152861690636e553f65906044016020604051808303816000875af1158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190610b9b565b90508181101561022f5760405163428637bb60e11b815260040160405180910390fd5b60006001600160a01b0385166106c457604051630306120160e01b815260040160405180910390fd5b6040516394bf804d60e01b8152600481018590526001600160a01b0384811660248301528616906394bf804d906044016020604051808303816000875af1158015610713573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107379190610b9b565b90508181111561022f5760405163428637bb60e11b815260040160405180910390fd5b6033546001600160a01b031633146103405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e8565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006001600160a01b03861661082f57604051630306120160e01b815260040160405180910390fd5b604051635d043b2960e11b8152600481018690526001600160a01b038581166024830152848116604483015287169063ba087652906064016020604051808303816000875af1158015610886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108aa9190610b9b565b9050818110156103d95760405163428637bb60e11b815260040160405180910390fd5b60006001600160a01b0386166108f657604051630306120160e01b815260040160405180910390fd5b604051632d182be560e21b8152600481018690526001600160a01b038581166024830152848116604483015287169063b460af94906064016020604051808303816000875af115801561094d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109719190610b9b565b9050818111156103d95760405163428637bb60e11b815260040160405180910390fd5b6065546040516001600160a01b038084169216907f4a2da5517922d469e27cc43b2e88ebd65d79400caf5bb7cc34419e64cf85bb1a90600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff16610a5b5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016104e8565b610443816107b4565b6001600160a01b038116811461044c57600080fd5b60008060008060808587031215610a8f57600080fd5b8435610a9a81610a64565b9350602085013592506040850135610ab181610a64565b9396929550929360600135925050565b60008060408385031215610ad457600080fd5b8235610adf81610a64565b91506020830135610aef81610a64565b809150509250929050565b600080600080600060a08688031215610b1257600080fd5b8535610b1d81610a64565b9450602086013593506040860135610b3481610a64565b92506060860135610b4481610a64565b949793965091946080013592915050565b600060208284031215610b6757600080fd5b8135610b7281610a64565b9392505050565b600060208284031215610b8b57600080fd5b81518015158114610b7257600080fd5b600060208284031215610bad57600080fd5b505191905056fea2646970667358221220385ab264a277bc63fe2ff2b32b8abadb635c076aec40b14d6a6aaefefd5024c464736f6c63430008180033';

type UseIERC4626MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UseIERC4626MockConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UseIERC4626Mock__factory extends ContractFactory {
  constructor(...args: UseIERC4626MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UseIERC4626Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UseIERC4626Mock__factory {
    return super.connect(runner) as UseIERC4626Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UseIERC4626MockInterface {
    return new Interface(_abi) as UseIERC4626MockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): UseIERC4626Mock {
    return new Contract(address, _abi, runner) as unknown as UseIERC4626Mock;
  }
}
