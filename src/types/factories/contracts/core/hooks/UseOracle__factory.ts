/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from 'ethers';
import type { UseOracle, UseOracleInterface } from '../../../../contracts/core/hooks/UseOracle';

const _abi = [
  {
    inputs: [],
    name: 'InvalidOracleContract',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
] as const;

export class UseOracle__factory {
  static readonly abi = _abi;
  static createInterface(): UseOracleInterface {
    return new Interface(_abi) as UseOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): UseOracle {
    return new Contract(address, _abi, runner) as unknown as UseOracle;
  }
}
