/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  UseUnifiedSwapperMock,
  UseUnifiedSwapperMockInterface,
} from "../../../../../../contracts/core/hooks/swappers/UseUnifiedSwapper.sol/UseUnifiedSwapperMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotTheGovernor",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedToApproveAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedToApproveAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFeeTier",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidGovernorAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOutputToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOutputToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOutputToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOutputToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProvider",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "RouteAlreadyAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "RouteNotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousGovernor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGovernor",
        type: "address",
      },
    ],
    name: "GovernshipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "disableRoute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum UseUnifiedSwapper.SwapProvider",
            name: "provider",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "uniV3Tier",
            type: "uint24",
          },
          {
            internalType: "uint24",
            name: "tickSpacing",
            type: "uint24",
          },
        ],
        internalType: "struct UseUnifiedSwapper.RouteInfo",
        name: "routeInfo",
        type: "tuple",
      },
    ],
    name: "enableRoute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "isRouteEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "underlyingIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingOut",
            type: "address",
          },
          {
            internalType: "enum ISwapHandler.SwapType",
            name: "mode",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct ISwapHandler.SwapParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "test__swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newGovernor",
        type: "address",
      },
    ],
    name: "transferGovernorship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610028565b6100233361007a565b6100d6565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6065546040516001600160a01b038084169216907f4a2da5517922d469e27cc43b2e88ebd65d79400caf5bb7cc34419e64cf85bb1a90600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b611a37806100e56000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a61461010d5780638da5cb5b14610115578063b6aa515b14610126578063f2c93b9414610139578063f2fde38b1461016157600080fd5b80630722f9c2146100985780630c340a24146100ad57806315a97e97146100d7578063323ec347146100ea575b600080fd5b6100ab6100a63660046114b0565b610174565b005b6065546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100ab6100e536600461156f565b6103c0565b6100fd6100f836600461156f565b61059f565b60405190151581526020016100ce565b6100ab6105de565b6033546001600160a01b03166100ba565b6100ab6101343660046115a2565b6105f2565b61014c610147366004611634565b610650565b604080519283526020830191909152016100ce565b6100ab61016f3660046115a2565b610665565b6065546001600160a01b0316331461019f5760405163e6e025c760e01b815260040160405180910390fd5b60006101ab84846106e0565b90506000808281526066602052604090205460ff1660038111156101d1576101d16116f0565b146101ef57604051632291fe5360e21b815260040160405180910390fd5b602082015160405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529085169063095ea7b3906044016020604051808303816000875af1158015610245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102699190611706565b610286576040516302e8763f60e31b815260040160405180910390fd5b602082015160405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529084169063095ea7b3906044016020604051808303816000875af11580156102dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103009190611706565b61031d576040516302e8763f60e31b815260040160405180910390fd5b60008181526066602052604090208251815484929190829060ff1916600183600381111561034d5761034d6116f0565b021790555060208201518154604084015160609094015162ffffff908116600160c01b0262ffffff60c01b1991909516600160a81b0262ffffff60a81b196001600160a01b039094166101000293909316610100600160c01b031990921691909117919091171691909117905550505050565b6065546001600160a01b031633146103eb5760405163e6e025c760e01b815260040160405180910390fd5b60006103f783836106e0565b90506000808281526066602052604090205460ff16600381111561041d5761041d6116f0565b0361043b5760405163139f8d8760e11b815260040160405180910390fd5b60008181526066602052604080822054905163095ea7b360e01b81526001600160a01b0361010090920482166004820152602481019290925284169063095ea7b3906044016020604051808303816000875af115801561049f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c39190611706565b6104e0576040516302e8763f60e31b815260040160405180910390fd5b60008181526066602052604080822054905163095ea7b360e01b81526001600160a01b0361010090920482166004820152602481019290925283169063095ea7b3906044016020604051808303816000875af1158015610544573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105689190611706565b610585576040516302e8763f60e31b815260040160405180910390fd5b6000908152606660205260409020805460ff191690555050565b6000806105ac84846106e0565b90506000808281526066602052604090205460ff1660038111156105d2576105d26116f0565b14159150505b92915050565b6105e661076b565b6105f060006107c5565b565b6065546001600160a01b0316331461061d5760405163e6e025c760e01b815260040160405180910390fd5b6001600160a01b0381166106445760405163fa68714160e01b815260040160405180910390fd5b61064d81610817565b50565b60008061065c83610873565b91509150915091565b61066d61076b565b6001600160a01b0381166106d75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61064d816107c5565b6000816001600160a01b0316836001600160a01b03161061071e57604080518082019091526001600160a01b0380841682528416602082015261073d565b604080518082019091526001600160a01b038085168252831660208201525b60405160200161074d9190611728565b60405160208183030381529060405280519060200120905092915050565b6033546001600160a01b031633146105f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106ce565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6065546040516001600160a01b038084169216907f4a2da5517922d469e27cc43b2e88ebd65d79400caf5bb7cc34419e64cf85bb1a90600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b600080600061088a846000015185602001516106e0565b60008181526066602052604080822081516080810190925280549394509192909190829060ff1660038111156108c2576108c26116f0565b60038111156108d3576108d36116f0565b815290546001600160a01b03610100820416602083015262ffffff600160a81b820481166040840152600160c01b909104166060909101529050600081516003811115610922576109226116f0565b036109405760405163139f8d8760e11b815260040160405180910390fd5b600181516003811115610955576109556116f0565b0361099e57604080820151815162ffffff90911660208201520160408051601f1981840301815291905260a086015260208101516109939086610a33565b935093505050915091565b6002815160038111156109b3576109b36116f0565b036109c657610993816020015186610cf5565b6003815160038111156109db576109db6116f0565b03610a1a5760608101516040805162ffffff90921660208301520160408051601f1981840301815291905260a086015260208101516109939086611226565b604051633b136dc160e11b815260040160405180910390fd5b805160009081906001600160a01b0316610a6057604051632df9739b60e01b815260040160405180910390fd5b60208301516001600160a01b0316610a8a576040516231010160e51b815260040160405180910390fd5b60008360a00151806020019051810190610aa49190611762565b90508062ffffff16600003610acc57604051631b99aa4560e11b815260040160405180910390fd5b600084604001516001811115610ae457610ae46116f0565b03610bef5783606001519250846001600160a01b03166304e45aaf6040518060e0016040528087600001516001600160a01b0316815260200187602001516001600160a01b031681526020018462ffffff168152602001306001600160a01b031681526020018681526020018760800151815260200160006001600160a01b03168152506040518263ffffffff1660e01b8152600401610b84919061177f565b6020604051808303816000875af1158015610ba3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc791906117de565b915081600003610bea5760405163081ceff360e41b815260040160405180910390fd5b610ced565b600184604001516001811115610c0757610c076116f0565b03610ced5783608001519150846001600160a01b0316635023b4df6040518060e0016040528087600001516001600160a01b0316815260200187602001516001600160a01b031681526020018462ffffff168152602001306001600160a01b031681526020018581526020018760600151815260200160006001600160a01b03168152506040518263ffffffff1660e01b8152600401610ca7919061177f565b6020604051808303816000875af1158015610cc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cea91906117de565b92505b509250929050565b805160009081906001600160a01b0316610d2257604051632df9739b60e01b815260040160405180910390fd5b60208301516001600160a01b0316610d4c576040516231010160e51b815260040160405180910390fd5b604080516002808252606082018352600092602083019080368337019050509050836000015181600081518110610d8557610d856117f7565b60200260200101906001600160a01b031690816001600160a01b031681525050836020015181600181518110610dbd57610dbd6117f7565b6001600160a01b0390921660209283029190910190910152600084604001516001811115610ded57610ded6116f0565b03610ffe578351606085015160405163095ea7b360e01b81526001600160a01b038881166004830152602482019290925291169063095ea7b3906044016020604051808303816000875af1158015610e49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6d9190611706565b610e8a576040516302e8763f60e31b815260040160405180910390fd5b608084015160009015610ea257506080840151610f48565b606085015160405163d06ca61f60e01b81526000916001600160a01b0389169163d06ca61f91610ed6918790600401611852565b600060405180830381865afa158015610ef3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f1b9190810190611873565b90508060018251610f2c9190611919565b81518110610f3c57610f3c6117f7565b60200260200101519150505b846060015193506000866001600160a01b03166338ed173986848630426040518663ffffffff1660e01b8152600401610f8595949392919061193a565b6000604051808303816000875af1158015610fa4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fcc9190810190611873565b90508060018251610fdd9190611919565b81518110610fed57610fed6117f7565b602002602001015193505050611205565b600184604001516001811115611016576110166116f0565b036112055783608001519150600084606001516000036110cb576040516307c0329d60e21b81526000906001600160a01b03881690631f00ca74906110619087908790600401611852565b600060405180830381865afa15801561107e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110a69190810190611873565b9050806000815181106110bb576110bb6117f7565b60200260200101519150506110d2565b5060608401515b845160405163095ea7b360e01b81526001600160a01b038881166004830152602482018490529091169063095ea7b3906044016020604051808303816000875af1158015611124573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111489190611706565b611165576040516302e8763f60e31b815260040160405180910390fd5b604051634401edf760e11b81526000906001600160a01b03881690638803dbee9061119c908790869088903090429060040161193a565b6000604051808303816000875af11580156111bb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111e39190810190611873565b9050806000815181106111f8576111f86117f7565b6020026020010151945050505b81600003610ced5760405163081ceff360e41b815260040160405180910390fd5b805160009081906001600160a01b031661125357604051632df9739b60e01b815260040160405180910390fd5b60208301516001600160a01b031661127d576040516231010160e51b815260040160405180910390fd5b60008360a001518060200190518101906112979190611976565b90506000846040015160018111156112b1576112b16116f0565b036113565783606001519250846001600160a01b031663a026383e60405180610100016040528087600001516001600160a01b0316815260200187602001516001600160a01b031681526020018460020b8152602001306001600160a01b031681526020014281526020018681526020018760800151815260200160006001600160a01b03168152506040518263ffffffff1660e01b8152600401610b849190611999565b60018460400151600181111561136e5761136e6116f0565b03610ced5783608001519150846001600160a01b031663c714e83860405180610100016040528087600001516001600160a01b0316815260200187602001516001600160a01b031681526020018460020b8152602001306001600160a01b031681526020014281526020018581526020018760600151815260200160006001600160a01b03168152506040518263ffffffff1660e01b8152600401610ca79190611999565b80356001600160a01b038116811461142a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156114685761146861142f565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156114975761149761142f565b604052919050565b62ffffff8116811461064d57600080fd5b600080600083850360c08112156114c657600080fd5b6114cf85611413565b93506114dd60208601611413565b92506080603f19820112156114f157600080fd5b506040516080810181811067ffffffffffffffff821117156115155761151561142f565b60409081528501356004811061152a57600080fd5b815261153860608601611413565b6020820152608085013561154b8161149f565b604082015260a085013561155e8161149f565b606082015292959194509192509050565b6000806040838503121561158257600080fd5b61158b83611413565b915061159960208401611413565b90509250929050565b6000602082840312156115b457600080fd5b6115bd82611413565b9392505050565b600082601f8301126115d557600080fd5b813567ffffffffffffffff8111156115ef576115ef61142f565b611602601f8201601f191660200161146e565b81815284602083860101111561161757600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561164657600080fd5b813567ffffffffffffffff8082111561165e57600080fd5b9083019060c0828603121561167257600080fd5b61167a611445565b61168383611413565b815261169160208401611413565b60208201526040830135600281106116a857600080fd5b80604083015250606083013560608201526080830135608082015260a0830135828111156116d557600080fd5b6116e1878286016115c4565b60a08301525095945050505050565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561171857600080fd5b815180151581146115bd57600080fd5b60408101818360005b60028110156117595781516001600160a01b0316835260209283019290910190600101611731565b50505092915050565b60006020828403121561177457600080fd5b81516115bd8161149f565b60e081016105d8828480516001600160a01b03908116835260208083015182169084015260408083015162ffffff16908401526060808301518216908401526080808301519084015260a0828101519084015260c09182015116910152565b6000602082840312156117f057600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60008151808452602080850194506020840160005b838110156118475781516001600160a01b031687529582019590820190600101611822565b509495945050505050565b82815260406020820152600061186b604083018461180d565b949350505050565b6000602080838503121561188657600080fd5b825167ffffffffffffffff8082111561189e57600080fd5b818501915085601f8301126118b257600080fd5b8151818111156118c4576118c461142f565b8060051b91506118d584830161146e565b81815291830184019184810190888411156118ef57600080fd5b938501935b8385101561190d578451825293850193908501906118f4565b98975050505050505050565b818103818111156105d857634e487b7160e01b600052601160045260246000fd5b85815284602082015260a06040820152600061195960a083018661180d565b6001600160a01b0394909416606083015250608001529392505050565b60006020828403121561198857600080fd5b81518060020b81146115bd57600080fd5b61010081016105d8828480516001600160a01b03908116835260208083015182169084015260408083015160020b908401526060808301518216908401526080808301519084015260a0828101519084015260c0808301519084015260e0918201511691015256fea26469706673582212206da47c9249492794845ed759e962ff643be971bd23586614bc12cca2fd58ea2b64736f6c63430008180033";

type UseUnifiedSwapperMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UseUnifiedSwapperMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UseUnifiedSwapperMock__factory extends ContractFactory {
  constructor(...args: UseUnifiedSwapperMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UseUnifiedSwapperMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UseUnifiedSwapperMock__factory {
    return super.connect(runner) as UseUnifiedSwapperMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UseUnifiedSwapperMockInterface {
    return new Interface(_abi) as UseUnifiedSwapperMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UseUnifiedSwapperMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UseUnifiedSwapperMock;
  }
}
