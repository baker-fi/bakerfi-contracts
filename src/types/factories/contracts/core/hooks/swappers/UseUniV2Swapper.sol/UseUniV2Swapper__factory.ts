/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from 'ethers';
import type {
  UseUniV2Swapper,
  UseUniV2SwapperInterface,
} from '../../../../../../contracts/core/hooks/swappers/UseUniV2Swapper.sol/UseUniV2Swapper';

const _abi = [
  {
    inputs: [],
    name: 'FailedToApproveAllowance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidInputToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidOutputToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidV2RouterContract',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SwapFailed',
    type: 'error',
  },
] as const;

export class UseUniV2Swapper__factory {
  static readonly abi = _abi;
  static createInterface(): UseUniV2SwapperInterface {
    return new Interface(_abi) as UseUniV2SwapperInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): UseUniV2Swapper {
    return new Contract(address, _abi, runner) as unknown as UseUniV2Swapper;
  }
}
