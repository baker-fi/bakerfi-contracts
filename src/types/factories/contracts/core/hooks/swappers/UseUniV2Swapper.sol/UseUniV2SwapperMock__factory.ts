/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  UseUniV2SwapperMock,
  UseUniV2SwapperMockInterface,
} from "../../../../../../contracts/core/hooks/swappers/UseUniV2Swapper.sol/UseUniV2SwapperMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "iV2UniRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedToApproveAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedToApproveAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInputToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOutputToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOutputToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidV2RouterContract",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "underlyingIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingOut",
            type: "address",
          },
          {
            internalType: "enum ISwapHandler.SwapType",
            name: "mode",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "payload",
            type: "bytes",
          },
        ],
        internalType: "struct ISwapHandler.SwapParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "test__swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a53380380610a5383398101604081905261002f91610089565b6100388161003e565b506100b9565b6001600160a01b038116610065576040516342881e2f60e01b815260040160405180910390fd5b7f47b2c96b5499f1e2d1a7c2ef4c1a5a1e0d4a0c2e4b6d8f0a2c4e6f8a0c2e4b6d55565b60006020828403121561009b57600080fd5b81516001600160a01b03811681146100b257600080fd5b9392505050565b61098b806100c86000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f2c93b9414610030575b600080fd5b61004361003e3660046106d5565b61005c565b6040805192835260208301919091520160405180910390f35b60008061006883610071565b91509150915091565b60008061006861009f7f47b2c96b5499f1e2d1a7c2ef4c1a5a1e0d4a0c2e4b6d8f0a2c4e6f8a0c2e4b6d5490565b84805160009081906001600160a01b03166100cd57604051632df9739b60e01b815260040160405180910390fd5b60208301516001600160a01b03166100f7576040516231010160e51b815260040160405180910390fd5b60408051600280825260608201835260009260208301908036833701905050905083600001518160008151811061013057610130610791565b60200260200101906001600160a01b031690816001600160a01b03168152505083602001518160018151811061016857610168610791565b6001600160a01b0390921660209283029190910190910152600084604001516001811115610198576101986107a7565b036103a9578351606085015160405163095ea7b360e01b81526001600160a01b038881166004830152602482019290925291169063095ea7b3906044016020604051808303816000875af11580156101f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021891906107bd565b610235576040516302e8763f60e31b815260040160405180910390fd5b60808401516000901561024d575060808401516102f3565b606085015160405163d06ca61f60e01b81526000916001600160a01b0389169163d06ca61f9161028191879060040161082b565b600060405180830381865afa15801561029e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102c6919081019061084c565b905080600182516102d791906108f2565b815181106102e7576102e7610791565b60200260200101519150505b846060015193506000866001600160a01b03166338ed173986848630426040518663ffffffff1660e01b8152600401610330959493929190610919565b6000604051808303816000875af115801561034f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610377919081019061084c565b9050806001825161038891906108f2565b8151811061039857610398610791565b6020026020010151935050506105b0565b6001846040015160018111156103c1576103c16107a7565b036105b0578360800151915060008460600151600003610476576040516307c0329d60e21b81526000906001600160a01b03881690631f00ca749061040c908790879060040161082b565b600060405180830381865afa158015610429573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610451919081019061084c565b90508060008151811061046657610466610791565b602002602001015191505061047d565b5060608401515b845160405163095ea7b360e01b81526001600160a01b038881166004830152602482018490529091169063095ea7b3906044016020604051808303816000875af11580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f391906107bd565b610510576040516302e8763f60e31b815260040160405180910390fd5b604051634401edf760e11b81526000906001600160a01b03881690638803dbee906105479087908690889030904290600401610919565b6000604051808303816000875af1158015610566573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261058e919081019061084c565b9050806000815181106105a3576105a3610791565b6020026020010151945050505b816000036105d15760405163081ceff360e41b815260040160405180910390fd5b509250929050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715610612576106126105d9565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610641576106416105d9565b604052919050565b80356001600160a01b038116811461066057600080fd5b919050565b600082601f83011261067657600080fd5b813567ffffffffffffffff811115610690576106906105d9565b6106a3601f8201601f1916602001610618565b8181528460208386010111156106b857600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156106e757600080fd5b813567ffffffffffffffff808211156106ff57600080fd5b9083019060c0828603121561071357600080fd5b61071b6105ef565b61072483610649565b815261073260208401610649565b602082015260408301356002811061074957600080fd5b80604083015250606083013560608201526080830135608082015260a08301358281111561077657600080fd5b61078287828601610665565b60a08301525095945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6000602082840312156107cf57600080fd5b815180151581146107df57600080fd5b9392505050565b60008151808452602080850194506020840160005b838110156108205781516001600160a01b0316875295820195908201906001016107fb565b509495945050505050565b82815260406020820152600061084460408301846107e6565b949350505050565b6000602080838503121561085f57600080fd5b825167ffffffffffffffff8082111561087757600080fd5b818501915085601f83011261088b57600080fd5b81518181111561089d5761089d6105d9565b8060051b91506108ae848301610618565b81815291830184019184810190888411156108c857600080fd5b938501935b838510156108e6578451825293850193908501906108cd565b98975050505050505050565b8181038181111561091357634e487b7160e01b600052601160045260246000fd5b92915050565b85815284602082015260a06040820152600061093860a08301866107e6565b6001600160a01b039490941660608301525060800152939250505056fea2646970667358221220ea8e9599a3845f8df56a5a463f103e7eecd64f60f20e77e4daa0bc6c84bf855164736f6c63430008180033";

type UseUniV2SwapperMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UseUniV2SwapperMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UseUniV2SwapperMock__factory extends ContractFactory {
  constructor(...args: UseUniV2SwapperMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    iV2UniRouter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(iV2UniRouter, overrides || {});
  }
  override deploy(
    iV2UniRouter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(iV2UniRouter, overrides || {}) as Promise<
      UseUniV2SwapperMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): UseUniV2SwapperMock__factory {
    return super.connect(runner) as UseUniV2SwapperMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UseUniV2SwapperMockInterface {
    return new Interface(_abi) as UseUniV2SwapperMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UseUniV2SwapperMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as UseUniV2SwapperMock;
  }
}
