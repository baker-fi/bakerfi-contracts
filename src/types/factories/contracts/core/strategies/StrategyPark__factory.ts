/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../../common';
import type {
  StrategyPark,
  StrategyParkInterface,
} from '../../../../contracts/core/strategies/StrategyPark';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'initialOwner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'asset_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'newDeployment',
        type: 'uint256',
      },
    ],
    name: 'StrategyAmountUpdate',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'StrategyDeploy',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'StrategyLoss',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'StrategyProfit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'StrategyUndeploy',
    type: 'event',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'deploy',
    outputs: [
      {
        internalType: 'uint256',
        name: 'deployedAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'harvest',
    outputs: [
      {
        internalType: 'int256',
        name: 'balanceChange',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'undeploy',
    outputs: [
      {
        internalType: 'uint256',
        name: 'undeployedAmount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a060405234801561001057600080fd5b50604051610cbd380380610cbd83398101604081905261002f916100ef565b600160005561003d33610081565b6001600160a01b0381166100645760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b03811660805261007a82610081565b5050610122565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146100ea57600080fd5b919050565b6000806040838503121561010257600080fd5b61010b836100d3565b9150610119602084016100d3565b90509250929050565b608051610b656101586000396000818160aa0152818161015601528181610231015281816102fb01526104810152610b656000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146100fd5780638da5cb5b14610107578063a5e3875114610118578063f2fde38b1461012b57600080fd5b806301e1d1141461008d57806338d52e0f146100a8578063440e6dff146100e25780634641257d146100f5575b600080fd5b61009561013e565b6040519081526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b03909116815260200161009f565b6100956100f03660046109b3565b6101ce565b6100956102d9565b61010561042d565b005b6001546001600160a01b03166100ca565b6100956101263660046109b3565b610441565b6101056101393660046109cc565b610525565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156101a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c991906109fc565b905090565b60006101d86105a3565b6101e06105fc565b8160000361020157604051631f2a200560e01b815260040160405180910390fd5b60025482111561022457604051631e9acf1760e31b815260040160405180910390fd5b6102586001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163384610656565b816002600082825461026a9190610a2b565b9091555050604051829033907fd876b3a71b8d3ba9e91f332c8be4f54719ce01f2583ceed9c22bf76aaa3fc35390600090a36002546040517f2dd98c29534f0234343e33770888eec9561b1580bba498c1cda8c1b8e3dbe1e090600090a250806102d46001600055565b919050565b60006102e36105fc565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e91906109fc565b90506002548161037e9190610a44565b915060008213156103b95760405182907fb24093f9ac16681be69ee94e18b6581e28387a1e4d6e25cfea38138ad5be616790600090a26103f5565b60008212156103f5576103cb82610a6b565b6040517fede8d8525758cb6685bfabd1b6304e23cd86c77d10cc920af49e2b4637dc233e90600090a25b81156104275760405181907f2dd98c29534f0234343e33770888eec9561b1580bba498c1cda8c1b8e3dbe1e090600090a25b60025590565b6104356105fc565b61043f60006106be565b565b600061044b6105a3565b6104536105fc565b8160000361047457604051631f2a200560e01b815260040160405180910390fd5b6104a96001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085610710565b81600260008282546104bb9190610a87565b9091555050604051829033907f642a0bcf70c335488df8376c9718c6ad9f2a5f2ce827bc883176aa0dd1062b0690600090a36002546040517f2dd98c29534f0234343e33770888eec9561b1580bba498c1cda8c1b8e3dbe1e090600090a250806102d46001600055565b61052d6105fc565b6001600160a01b0381166105975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6105a0816106be565b50565b6002600054036105f55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161058e565b6002600055565b6001546001600160a01b0316331461043f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161058e565b6040516001600160a01b0383166024820152604481018290526106b990849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261074e565b505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526107489085906323b872dd60e01b90608401610682565b50505050565b60006107a3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108239092919063ffffffff16565b90508051600014806107c45750808060200190518101906107c49190610a9a565b6106b95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161058e565b6060610832848460008561083a565b949350505050565b60608247101561089b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161058e565b600080866001600160a01b031685876040516108b79190610ae0565b60006040518083038185875af1925050503d80600081146108f4576040519150601f19603f3d011682016040523d82523d6000602084013e6108f9565b606091505b509150915061090a87838387610915565b979650505050505050565b6060831561098457825160000361097d576001600160a01b0385163b61097d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161058e565b5081610832565b61083283838151156109995781518083602001fd5b8060405162461bcd60e51b815260040161058e9190610afc565b6000602082840312156109c557600080fd5b5035919050565b6000602082840312156109de57600080fd5b81356001600160a01b03811681146109f557600080fd5b9392505050565b600060208284031215610a0e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610a3e57610a3e610a15565b92915050565b8181036000831280158383131683831282161715610a6457610a64610a15565b5092915050565b6000600160ff1b8201610a8057610a80610a15565b5060000390565b80820180821115610a3e57610a3e610a15565b600060208284031215610aac57600080fd5b815180151581146109f557600080fd5b60005b83811015610ad7578181015183820152602001610abf565b50506000910152565b60008251610af2818460208701610abc565b9190910192915050565b6020815260008251806020840152610b1b816040850160208701610abc565b601f01601f1916919091016040019291505056fea26469706673582212203b22fd95018517e8cd09744cbbe4209e936c68bc064bed2ff951eee44f166c3864736f6c63430008180033';

type StrategyParkConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyParkConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyPark__factory extends ContractFactory {
  constructor(...args: StrategyParkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    asset_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, asset_, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    asset_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(initialOwner, asset_, overrides || {}) as Promise<
      StrategyPark & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StrategyPark__factory {
    return super.connect(runner) as StrategyPark__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyParkInterface {
    return new Interface(_abi) as StrategyParkInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): StrategyPark {
    return new Contract(address, _abi, runner) as unknown as StrategyPark;
  }
}
