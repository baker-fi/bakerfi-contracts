/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  StrategySupplyAAVEv3,
  StrategySupplyAAVEv3Interface,
} from "../../../../contracts/core/strategies/StrategySupplyAAVEv3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset_",
        type: "address",
      },
      {
        internalType: "address",
        name: "aavev3Address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedToApproveAllowanceForAAVE",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalValueMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newDeployment",
        type: "uint256",
      },
    ],
    name: "StrategyAmountUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StrategyDeploy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StrategyLoss",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StrategyProfit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StrategyUndeploy",
    type: "event",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "uint256",
        name: "deployedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [
      {
        internalType: "int256",
        name: "balanceChange",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "undeploy",
    outputs: [
      {
        internalType: "uint256",
        name: "undeployedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620011f8380380620011f88339810160408190526200003491620001db565b6001600055828262000046336200016c565b6001600160a01b03821615806200006457506001600160a01b038116155b15620000835760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0381166080526200009b826200016c565b50506001600160a01b038116620000c55760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0381811660a081905260405163095ea7b360e01b8152600481019190915260001960248201529083169063095ea7b3906044016020604051808303816000875af11580156200011f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000145919062000225565b62000163576040516319b298af60e11b815260040160405180910390fd5b50505062000250565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620001d657600080fd5b919050565b600080600060608486031215620001f157600080fd5b620001fc84620001be565b92506200020c60208501620001be565b91506200021c60408501620001be565b90509250925092565b6000602082840312156200023857600080fd5b815180151581146200024957600080fd5b9392505050565b60805160a051610f52620002a6600039600081816105300152818161071401526108d701526000818160bd015281816101fc015281816103c101528181610503015281816106dc01526108980152610f526000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80634641257d116100665780634641257d14610108578063715018a6146101105780638da5cb5b1461011a578063a5e387511461012b578063f2fde38b1461013e57600080fd5b806301e1d1141461009857806312065fe0146100b357806338d52e0f146100bb578063440e6dff146100f5575b600080fd5b6100a0610151565b6040519081526020015b60405180910390f35b6100a0610160565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020016100aa565b6100a0610103366004610ba0565b61016a565b6100a061029a565b61011861036d565b005b6001546001600160a01b03166100dd565b6100a0610139366004610ba0565b610381565b61011861014c366004610bce565b61046e565b600061015b610160565b905090565b600061015b6104ec565b6000610174610612565b61017c61066b565b8160000361019d57604051631f2a200560e01b815260040160405180910390fd5b60006101a7610160565b9050808311156101ca57604051631e9acf1760e31b815260040160405180910390fd5b60006101d5846106c5565b905080600260008282546101e99190610c08565b9091555061022390506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610789565b61022d8483610c08565b604051909250819033907fd876b3a71b8d3ba9e91f332c8be4f54719ce01f2583ceed9c22bf76aaa3fc35390600090a360405182907f2dd98c29534f0234343e33770888eec9561b1580bba498c1cda8c1b8e3dbe1e090600090a29150506102956001600055565b919050565b60006102a461066b565b60006102ae610160565b9050600254816102be9190610c1b565b915060008213156102f95760405182907fb24093f9ac16681be69ee94e18b6581e28387a1e4d6e25cfea38138ad5be616790600090a2610335565b60008212156103355761030b82610c42565b6040517fede8d8525758cb6685bfabd1b6304e23cd86c77d10cc920af49e2b4637dc233e90600090a25b81156103675760405181907f2dd98c29534f0234343e33770888eec9561b1580bba498c1cda8c1b8e3dbe1e090600090a25b60025590565b61037561066b565b61037f60006107f1565b565b600061038b610612565b61039361066b565b816000036103b457604051631f2a200560e01b815260040160405180910390fd5b6103e96001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085610843565b6103f282610881565b905080600260008282546104069190610c5e565b9091555050604051819033907f642a0bcf70c335488df8376c9718c6ad9f2a5f2ce827bc883176aa0dd1062b0690600090a36002546040517f2dd98c29534f0234343e33770888eec9561b1580bba498c1cda8c1b8e3dbe1e090600090a26102956001600055565b61047661066b565b6001600160a01b0381166104e05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104e9816107f1565b50565b6040516335ea6a7560e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260009182917f000000000000000000000000000000000000000000000000000000000000000016906335ea6a75906024016101e060405180830381865afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c9190610d4b565b6101008101516040516370a0823160e01b81523060048201529192506001600160a01b0316906370a0823190602401602060405180830381865afa1580156105e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060c9190610e6e565b91505090565b6002600054036106645760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104d7565b6002600055565b6001546001600160a01b0316331461037f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d7565b604051631a4ca37b60e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390523060448301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906369328dec906064016020604051808303816000875af115801561075f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107839190610e6e565b92915050565b6040516001600160a01b0383166024820152604481018290526107ec90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261093b565b505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b038085166024830152831660448201526064810182905261087b9085906323b872dd60e01b906084016107b5565b50505050565b60405163617ba03760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260248201839052306044830152600060648301819052917f00000000000000000000000000000000000000000000000000000000000000009091169063617ba03790608401600060405180830381600087803b15801561091d57600080fd5b505af1158015610931573d6000803e3d6000fd5b5093949350505050565b6000610990826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a109092919063ffffffff16565b90508051600014806109b15750808060200190518101906109b19190610e87565b6107ec5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104d7565b6060610a1f8484600085610a27565b949350505050565b606082471015610a885760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104d7565b600080866001600160a01b03168587604051610aa49190610ecd565b60006040518083038185875af1925050503d8060008114610ae1576040519150601f19603f3d011682016040523d82523d6000602084013e610ae6565b606091505b5091509150610af787838387610b02565b979650505050505050565b60608315610b71578251600003610b6a576001600160a01b0385163b610b6a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104d7565b5081610a1f565b610a1f8383815115610b865781518083602001fd5b8060405162461bcd60e51b81526004016104d79190610ee9565b600060208284031215610bb257600080fd5b5035919050565b6001600160a01b03811681146104e957600080fd5b600060208284031215610be057600080fd5b8135610beb81610bb9565b9392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561078357610783610bf2565b8181036000831280158383131683831282161715610c3b57610c3b610bf2565b5092915050565b6000600160ff1b8201610c5757610c57610bf2565b5060000390565b8082018082111561078357610783610bf2565b6040516101e0810167ffffffffffffffff81118282101715610ca357634e487b7160e01b600052604160045260246000fd5b60405290565b600060208284031215610cbb57600080fd5b6040516020810181811067ffffffffffffffff82111715610cec57634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff8116811461029557600080fd5b805164ffffffffff8116811461029557600080fd5b805161ffff8116811461029557600080fd5b805161029581610bb9565b60006101e08284031215610d5e57600080fd5b610d66610c71565b610d708484610ca9565b8152610d7e60208401610cf9565b6020820152610d8f60408401610cf9565b6040820152610da060608401610cf9565b6060820152610db160808401610cf9565b6080820152610dc260a08401610cf9565b60a0820152610dd360c08401610d19565b60c0820152610de460e08401610d2e565b60e0820152610100610df7818501610d40565b90820152610120610e09848201610d40565b90820152610140610e1b848201610d40565b90820152610160610e2d848201610d40565b90820152610180610e3f848201610cf9565b908201526101a0610e51848201610cf9565b908201526101c0610e63848201610cf9565b908201529392505050565b600060208284031215610e8057600080fd5b5051919050565b600060208284031215610e9957600080fd5b81518015158114610beb57600080fd5b60005b83811015610ec4578181015183820152602001610eac565b50506000910152565b60008251610edf818460208701610ea9565b9190910192915050565b6020815260008251806020840152610f08816040850160208701610ea9565b601f01601f1916919091016040019291505056fea26469706673582212201a278598cd95ae9f391e3a00fe0d7669243c11da1d1111c27656db6f8f145e4764736f6c63430008180033";

type StrategySupplyAAVEv3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategySupplyAAVEv3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategySupplyAAVEv3__factory extends ContractFactory {
  constructor(...args: StrategySupplyAAVEv3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    asset_: AddressLike,
    aavev3Address: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      asset_,
      aavev3Address,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    asset_: AddressLike,
    aavev3Address: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      asset_,
      aavev3Address,
      overrides || {}
    ) as Promise<
      StrategySupplyAAVEv3 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StrategySupplyAAVEv3__factory {
    return super.connect(runner) as StrategySupplyAAVEv3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategySupplyAAVEv3Interface {
    return new Interface(_abi) as StrategySupplyAAVEv3Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StrategySupplyAAVEv3 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StrategySupplyAAVEv3;
  }
}
