/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  StrategyLeverageSettings,
  StrategyLeverageSettingsInterface,
} from "../../../../contracts/core/strategies/StrategyLeverageSettings";

const _abi = [
  {
    inputs: [],
    name: "CallerNotTheGovernor",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidGovernorAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLoopCount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMaxLoanToValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPercentage",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValue",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousGovernor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGovernor",
        type: "address",
      },
    ],
    name: "GovernshipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "LoanToValueChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "MaxLoanToValueChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "MaxSlippageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "NrLoopsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "PriceMaxAgeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "PriceMaxConfChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "getLoanToValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxLoanToValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxSlippage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNrLoops",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceMaxAge",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceMaxConf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loanToValue",
        type: "uint256",
      },
    ],
    name: "setLoanToValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxLoanToValue",
        type: "uint256",
      },
    ],
    name: "setMaxLoanToValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slippage",
        type: "uint256",
      },
    ],
    name: "setMaxSlippage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "nrLoops",
        type: "uint8",
      },
    ],
    name: "setNrLoops",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setPriceMaxAge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setPriceMaxConf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newGovernor",
        type: "address",
      },
    ],
    name: "transferGovernorship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6108ec806100ec6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806384fe3754116100a2578063a6895a7d11610071578063a6895a7d146101e0578063adbfc312146101f3578063b6aa515b146101fb578063d6297a061461020e578063f2fde38b1461022157600080fd5b806384fe37541461019f5780638da5cb5b146101b457806392f9c669146101c55780639e9667d5146101d857600080fd5b8063242758f3116100de578063242758f3146101695780633484971f1461017c57806343f68a4914610184578063715018a61461019757600080fd5b806306f2fb11146101105780630c340a24146101275780631964c9581461014c578063235eb16a14610161575b600080fd5b6067545b6040519081526020015b60405180910390f35b6065546001600160a01b03165b6040516001600160a01b03909116815260200161011e565b61015f61015a36600461084a565b610234565b005b6101146102db565b61015f61017736600461084a565b61030a565b606654610114565b61015f61019236600461084a565b61038c565b61015f61040f565b60685460405160ff909116815260200161011e565b6033546001600160a01b0316610134565b61015f6101d336600461084a565b610423565b6101146104ea565b61015f6101ee36600461084a565b610514565b606954610114565b61015f610209366004610863565b6105db565b61015f61021c366004610893565b610639565b61015f61022f366004610863565b6106c7565b6065546001600160a01b0316331461025f5760405163e6e025c760e01b815260040160405180910390fd5b633b9aca0081111561028457604051631f3b85d360e01b815260040160405180910390fd5b6102ad7fdcdd852e594407d62243674acd7258abfb4689d6abdc168bb42d4f40c75ac9d0829055565b60405181907f733b5fc312dfed2bc8ae5dbf05d5cb659ab55046ddcbec1918f52f613bbb5c3690600090a250565b60006103057fdcdd852e594407d62243674acd7258abfb4689d6abdc168bb42d4f40c75ac9d05490565b905090565b6065546001600160a01b031633146103355760405163e6e025c760e01b815260040160405180910390fd5b61035e7f7e9328092c46e3d103a0cb8e24aa657ae6f6b6cc910545a9729426966d864558829055565b60405181907f4642fb7c2c063aa089f687d3360c930483c062a89b6d371ff669d45bc7ffdf3590600090a250565b6065546001600160a01b031633146103b75760405163e6e025c760e01b815260040160405180910390fd5b633b9aca008111156103dc57604051631f3b85d360e01b815260040160405180910390fd5b606981905560405181907f2464163639a2c8e8ce439351474cccf4e5d5f6226b11d8984dfdf615420672db90600090a250565b610417610742565b610421600061079c565b565b6065546001600160a01b0316331461044e5760405163e6e025c760e01b815260040160405180910390fd5b60675481111561047157604051632a9ffab760e21b815260040160405180910390fd5b633b9aca0081111561049657604051631f3b85d360e01b815260040160405180910390fd5b806000036104b757604051632a9ffab760e21b815260040160405180910390fd5b606681905560405181907f5129e5a639a8aab0c7417fa5ea8f5555436f12301866aeae67b789e31ff6ee8390600090a250565b60006103057f7e9328092c46e3d103a0cb8e24aa657ae6f6b6cc910545a9729426966d8645585490565b6065546001600160a01b0316331461053f5760405163e6e025c760e01b815260040160405180910390fd5b8060000361056057604051632a9ffab760e21b815260040160405180910390fd5b633b9aca0081111561058557604051631f3b85d360e01b815260040160405180910390fd5b6066548110156105a857604051631dbaae5160e11b815260040160405180910390fd5b606781905560405181907f0e54922494ee00fae308aea0ebd64d27da978320217b536d889823332271ed3090600090a250565b6065546001600160a01b031633146106065760405163e6e025c760e01b815260040160405180910390fd5b6001600160a01b03811661062d5760405163fa68714160e01b815260040160405180910390fd5b610636816107ee565b50565b6065546001600160a01b031633146106645760405163e6e025c760e01b815260040160405180910390fd5b601460ff8216111561068957604051632ffe3c2f60e01b815260040160405180910390fd5b6068805460ff191660ff83169081179091556040517fce0a7d191c872adf950a44afa7939230f4ed67bd8122e6138ebd5a8a1efe3dbb90600090a250565b6106cf610742565b6001600160a01b0381166107395760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6106368161079c565b6033546001600160a01b031633146104215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610730565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6065546040516001600160a01b038084169216907f4a2da5517922d469e27cc43b2e88ebd65d79400caf5bb7cc34419e64cf85bb1a90600090a3606580546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561085c57600080fd5b5035919050565b60006020828403121561087557600080fd5b81356001600160a01b038116811461088c57600080fd5b9392505050565b6000602082840312156108a557600080fd5b813560ff8116811461088c57600080fdfea264697066735822122087d676070aa6974505cac83c8dd10b9e9dd826319ca4f9bc4c5440b463fb862964736f6c63430008180033";

type StrategyLeverageSettingsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyLeverageSettingsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyLeverageSettings__factory extends ContractFactory {
  constructor(...args: StrategyLeverageSettingsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StrategyLeverageSettings & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): StrategyLeverageSettings__factory {
    return super.connect(runner) as StrategyLeverageSettings__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyLeverageSettingsInterface {
    return new Interface(_abi) as StrategyLeverageSettingsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StrategyLeverageSettings {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as StrategyLeverageSettings;
  }
}
