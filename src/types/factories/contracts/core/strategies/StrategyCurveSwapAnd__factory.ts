/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from '../../../../common';
import type {
  StrategyCurveSwapAnd,
  StrategyCurveSwapAndInterface,
} from '../../../../contracts/core/strategies/StrategyCurveSwapAnd';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'initialOwner',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'iAsset',
        type: 'address',
      },
      {
        internalType: 'contract IStrategy',
        name: 'iUnderlyingStrategy',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: 'iOracle',
        type: 'address',
      },
      {
        internalType: 'contract ICurveRouterNG',
        name: 'router',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'iPool',
        type: 'address',
      },
      {
        internalType: 'uint8',
        name: 'inTokenPoolIndex',
        type: 'uint8',
      },
      {
        internalType: 'uint8',
        name: 'outTokenPoolIndex',
        type: 'uint8',
      },
      {
        internalType: 'uint8',
        name: 'iSwapType',
        type: 'uint8',
      },
      {
        internalType: 'uint8',
        name: 'iPoolType',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'FailedToApproveAllowance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedToApproveAllowanceFor',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidConfiguration',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidCurveRouterContract',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidInputToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidOutputToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OverflowDetected',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageExceeded',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SwapFailed',
    type: 'error',
  },
  {
    inputs: [],
    name: 'UnsupportedSwapType',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'newDeployment',
        type: 'uint256',
      },
    ],
    name: 'StrategyAmountUpdate',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'StrategyDeploy',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'StrategyLoss',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'StrategyProfit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'StrategyUndeploy',
    type: 'event',
  },
  {
    inputs: [],
    name: 'ETH_ADDRESS',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'curveRouter',
    outputs: [
      {
        internalType: 'contract ICurveRouterNG',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'deploy',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountUsed',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'harvest',
    outputs: [
      {
        internalType: 'int256',
        name: 'balanceChange',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxSlippage',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'oracle',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'maxSlippage_',
        type: 'uint256',
      },
    ],
    name: 'setMaxSlippage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'undeploy',
    outputs: [
      {
        internalType: 'uint256',
        name: 'undeployedAmount_',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'underlyingAsset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6101806040523480156200001257600080fd5b50604051620028d4380380620028d4833981016040819052620000359162000583565b60016000558989898962000049336200031a565b6001600160a01b0383161580620000d6575060006001600160a01b0316826001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000cb919062000663565b6001600160a01b0316145b80620000e957506001600160a01b038116155b15620001085760405163c52a9bd360e01b815260040160405180910390fd5b6001600160a01b03808416608052811660a05262000126846200036c565b816001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000165573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200018b919062000663565b60405163095ea7b360e01b81526001600160a01b0384811660048301526000196024830152919091169063095ea7b3906044016020604051808303816000875af1158015620001de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020491906200068a565b620002225760405163474a9d3760e01b815260040160405180910390fd5b506001600160a01b0390811660c052871691506200025590505760405163c52a9bd360e01b815260040160405180910390fd5b6001600160a01b03851660e05260ff8085166101005283811661012052828116610140528116610160526200028a86620003ef565b62000298896000196200042a565b6200030a886001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002db573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000301919062000663565b6000196200042a565b50505050505050505050620006ae565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b62000376620004d9565b6001600160a01b038116620003e15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620003ec816200031a565b50565b6001600160a01b038116620004175760405163b90e00fb60e01b815260040160405180910390fd5b600080516020620028b483398151915255565b6001600160a01b03821663095ea7b36200044362000537565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af115801562000491573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004b791906200068a565b620004d5576040516302e8763f60e31b815260040160405180910390fd5b5050565b6001546001600160a01b03163314620005355760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620003d8565b565b600062000551600080516020620028b48339815191525490565b905090565b6001600160a01b0381168114620003ec57600080fd5b805160ff811681146200057e57600080fd5b919050565b6000806000806000806000806000806101408b8d031215620005a457600080fd5b8a51620005b18162000556565b60208c0151909a50620005c48162000556565b60408c0151909950620005d78162000556565b60608c0151909850620005ea8162000556565b60808c0151909750620005fd8162000556565b60a08c0151909650620006108162000556565b94506200062060c08c016200056c565b93506200063060e08c016200056c565b9250620006416101008c016200056c565b9150620006526101208c016200056c565b90509295989b9194979a5092959850565b6000602082840312156200067657600080fd5b8151620006838162000556565b9392505050565b6000602082840312156200069d57600080fd5b815180151581146200068357600080fd5b60805160a05160c05160e0516101005161012051610140516101605161210d620007a760003960006111d4015260006111ac0152600081816110c7015261114f0152600081816110ed015261117501526000818161011701526112030152600081816102e801528181610526015281816106940152818161088101528181610a0601528181610d1f0152610f460152600081816101b701528181610b8e01528181610c0101528181610e3a0152610ea8015260008181610151015281816103de0152818161047e01528181610762015281816107d901528181610c9d015281816110290152818161108a0152611112015261210d6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637158da7c11610097578063a5e3875111610066578063a5e38751146101f4578063a734f06e14610207578063cda90b8814610222578063f2fde38b1461024957600080fd5b80637158da7c146101ad5780637dc0d1d0146101b55780638c04166f146101db5780638da5cb5b146101e357600080fd5b806343f68a49116100d357806343f68a4914610175578063440e6dff1461018a5780634641257d1461019d578063715018a6146101a557600080fd5b806301e1d114146100fa57806316f0115b1461011557806338d52e0f1461014f575b600080fd5b61010261025c565b6040519081526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b03909116815260200161010c565b7f0000000000000000000000000000000000000000000000000000000000000000610137565b610188610183366004611bc0565b61026b565b005b610102610198366004611bc0565b610278565b610102610512565b61018861067c565b610137610690565b7f0000000000000000000000000000000000000000000000000000000000000000610137565b600254610102565b6001546001600160a01b0316610137565b610102610202366004611bc0565b610714565b61013773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b7f12bf5c1f8c71d2ab50ad26cd63e0f5c50ba43161b985f5d4c823c1c5b55e3f1b54610137565b610188610257366004611bee565b610983565b6000610266610a01565b905090565b610273610aae565b600255565b6000610282610b08565b816000036102a35760405163162908e360e11b815260040160405180910390fd5b6003548211156102c65760405163162908e360e11b815260040160405180910390fd5b60408051808201909152610e1081526064602082015260006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663440e6dff6103178487610b61565b6040518263ffffffff1660e01b815260040161033591815260200190565b6020604051808303816000875af1158015610354573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103789190611c0b565b905060006103868383610e0d565b90506000633b9aca00600254633b9aca006103a19190611c3a565b6103ab9084611c53565b6103b59190611c6a565b905060006104316040518060c001604052806103cf610690565b6001600160a01b0390811682527f00000000000000000000000000000000000000000000000000000000000000001660208201526040016000815260200186815260200184815260200160405180602001604052806000815250815250611085565b9150508181101561045557604051638199f5f360e01b815260040160405180910390fd5b83600360008282546104679190611c3a565b909155509095508590506104a56001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383611252565b604051819033907fd876b3a71b8d3ba9e91f332c8be4f54719ce01f2583ceed9c22bf76aaa3fc35390600090a36003546040517f2dd98c29534f0234343e33770888eec9561b1580bba498c1cda8c1b8e3dbe1e090600090a2505050505061050d6001600055565b919050565b600061051c610aae565b610524610b08565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634641257d6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610584573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a89190611c0b565b5060006105b3610a01565b9050600354816105c39190611ca2565b915060008213156105fe5760405182907fb24093f9ac16681be69ee94e18b6581e28387a1e4d6e25cfea38138ad5be616790600090a261063a565b600082121561063a5761061082611cc9565b6040517fede8d8525758cb6685bfabd1b6304e23cd86c77d10cc920af49e2b4637dc233e90600090a25b811561066c5760405181907f2dd98c29534f0234343e33770888eec9561b1580bba498c1cda8c1b8e3dbe1e090600090a25b6003556106796001600055565b90565b610684610aae565b61068e60006112ba565b565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102669190611ce5565b600061071e610b08565b8160000361073f5760405163162908e360e11b815260040160405180910390fd5b60408051808201909152610e1081526000602082015261078a6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308661130c565b60006107968285610b61565b90506000633b9aca00600254633b9aca006107b19190611c3a565b6107bb9084611c53565b6107c59190611c6a565b905060006108476040518060c001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316815260200161080e610690565b6001600160a01b031681526020016000815260200188815260200184815260200160405180602001604052806000815250815250611085565b9150508181101561086b57604051638199f5f360e01b815260040160405180910390fd5b60405163a5e3875160e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a5e38751906024016020604051808303816000875af11580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f69190611c0b565b5080600360008282546109099190611d02565b9091555061091990508482610e0d565b604051909550869033907f642a0bcf70c335488df8376c9718c6ad9f2a5f2ce827bc883176aa0dd1062b0690600090a36003546040517f2dd98c29534f0234343e33770888eec9561b1580bba498c1cda8c1b8e3dbe1e090600090a25050505061050d6001600055565b61098b610aae565b6001600160a01b0381166109f55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6109fe816112ba565b50565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a869190611c0b565b9050610aa8604051806040016040528060008152602001600081525082610e0d565b91505090565b6001546001600160a01b0316331461068e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109ec565b600260005403610b5a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109ec565b6002600055565b6040516304341d9960e01b8152825160048201526020830151602482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906304341d99906044016040805180830381865afa158015610bd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf89190611d15565b905080600001517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639670c0bc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c819190611c0b565b610c8b9085611c53565b610c959190611c6a565b9150610e05827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d9190611d72565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9f9190611ce5565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ddc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e009190611d72565b61134a565b949350505050565b6040516304341d9960e01b8152825160048201526020830151602482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906304341d99906044016040805180830381865afa158015610e80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea49190611d15565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639670c0bc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f289190611c0b565b8151610f349085611c53565b610f3e9190611c6a565b9150610e05827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc69190611ce5565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611003573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110279190611d72565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ddc573d6000803e3d6000fd5b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031683600001516001600160a01b0316146110eb577f000000000000000000000000000000000000000000000000000000000000000061110d565b7f00000000000000000000000000000000000000000000000000000000000000005b60ff167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031684602001516001600160a01b031614611173577f0000000000000000000000000000000000000000000000000000000000000000611195565b7f00000000000000000000000000000000000000000000000000000000000000005b60408051602081019390935260ff918216908301527f0000000000000000000000000000000000000000000000000000000000000000811660608301527f00000000000000000000000000000000000000000000000000000000000000001660808201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660a082015260c00160408051601f1981840301815291905260a084015261124983611449565b91509150915091565b6040516001600160a01b0383166024820152604481018290526112b590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261147d565b505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526113449085906323b872dd60e01b9060840161127e565b50505050565b60008160ff168360ff1611156113ad5760406113668385611d95565b60ff161061138757604051637883ad3d60e11b815260040160405180910390fd5b6113918284611d95565b61139c90600a611e92565b6113a69085611c6a565b9050611442565b8260ff168260ff16111561143f5760406113c78484611d95565b60ff16106113e857604051637883ad3d60e11b815260040160405180910390fd5b60006113f48484611d95565b6113ff90600a611e92565b905061140d81600019611c6a565b85111561142d57604051637883ad3d60e11b815260040160405180910390fd5b6114378186611c53565b915050611442565b50825b9392505050565b6000806112496114777f12bf5c1f8c71d2ab50ad26cd63e0f5c50ba43161b985f5d4c823c1c5b55e3f1b5490565b84611552565b60006114d2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661169f9092919063ffffffff16565b90508051600014806114f35750808060200190518101906114f39190611ea1565b6112b55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109ec565b805160009081906001600160a01b031661157f57604051632df9739b60e01b815260040160405180910390fd5b60208301516001600160a01b03166115a9576040516231010160e51b815260040160405180910390fd5b6115b1611b56565b6115b9611b75565b6115c1611ba2565b60008060008060008a60a001518060200190518101906115e19190611ec3565b8f51949950929750909550935091508860006001600160a01b039092166020929092020152808860016001600160a01b03909216602092830291909101528b01518860026001600160a01b039092166020929092020152808660006001600160a01b03909216602092830291909101526040805160a08101825287815291820186905281018490526060810183905260026080820152876000602002015261168c8c8989898f6116ae565b9950995050505050505050509250929050565b6060610e0584846000856119dd565b60008080836040015160018111156116c8576116c8611c8c565b036117ab5782516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146116fc5782606001516116fe565b345b608084015160405163c872a3c560e01b81529193506001600160a01b0389169163c872a3c591349161173c918b918b9189918c903090600401611fc0565b60206040518083038185885af115801561175a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061177f9190611c0b565b905082608001518110156117a65760405163081ceff360e41b815260040160405180910390fd5b6119d3565b6001836040015160018111156117c3576117c3611c8c565b036119ba576117d0611ba2565b6117d8611ba2565b60808501516040516390e7e20560e01b81526000916001600160a01b038c16916390e7e20591611814918d918d918d908a908a90600401612016565b602060405180830381865afa158015611831573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118559190611c0b565b86519091506001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14801561188457503481115b806118bb575085516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee148015906118bb5750856060015181115b156118d957604051631e9acf1760e31b815260040160405180910390fd5b85516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461190857856060015161190a565b345b608087015160405163c872a3c560e01b81529196506001600160a01b038c169163c872a3c5918891611948918e918e9185918f903090600401611fc0565b60206040518083038185885af1158015611966573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061198b9190611c0b565b935085608001518410156119b25760405163081ceff360e41b815260040160405180910390fd5b5050506119d3565b60405163c8bde22760e01b815260040160405180910390fd5b9550959350505050565b606082471015611a3e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016109ec565b600080866001600160a01b03168587604051611a5a9190612088565b60006040518083038185875af1925050503d8060008114611a97576040519150601f19603f3d011682016040523d82523d6000602084013e611a9c565b606091505b5091509150611aad87838387611ab8565b979650505050505050565b60608315611b27578251600003611b20576001600160a01b0385163b611b205760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109ec565b5081610e05565b610e058383815115611b3c5781518083602001fd5b8060405162461bcd60e51b81526004016109ec91906120a4565b604051806101600160405280600b906020820280368337509192915050565b6040518060a001604052806005905b611b8c611ba2565b815260200190600190039081611b845790505090565b6040518060a001604052806005906020820280368337509192915050565b600060208284031215611bd257600080fd5b5035919050565b6001600160a01b03811681146109fe57600080fd5b600060208284031215611c0057600080fd5b813561144281611bd9565b600060208284031215611c1d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115611c4d57611c4d611c24565b92915050565b8082028115828204841417611c4d57611c4d611c24565b600082611c8757634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b8181036000831280158383131683831282161715611cc257611cc2611c24565b5092915050565b6000600160ff1b8201611cde57611cde611c24565b5060000390565b600060208284031215611cf757600080fd5b815161144281611bd9565b80820180821115611c4d57611c4d611c24565b600060408284031215611d2757600080fd5b6040516040810181811067ffffffffffffffff82111715611d5857634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b600060208284031215611d8457600080fd5b815160ff8116811461144257600080fd5b60ff8281168282160390811115611c4d57611c4d611c24565b600181815b80851115611de9578160001904821115611dcf57611dcf611c24565b80851615611ddc57918102915b93841c9390800290611db3565b509250929050565b600082611e0057506001611c4d565b81611e0d57506000611c4d565b8160018114611e235760028114611e2d57611e49565b6001915050611c4d565b60ff841115611e3e57611e3e611c24565b50506001821b611c4d565b5060208310610133831016604e8410600b8410161715611e6c575081810a611c4d565b611e768383611dae565b8060001904821115611e8a57611e8a611c24565b029392505050565b600061144260ff841683611df1565b600060208284031215611eb357600080fd5b8151801515811461144257600080fd5b600080600080600060a08688031215611edb57600080fd5b855194506020860151935060408601519250606086015191506080860151611f0281611bd9565b809150509295509295909350565b8060005b600b8110156113445781516001600160a01b0316845260209384019390910190600101611f14565b806000805b6005808210611f505750611f8d565b835186845b83811015611f73578251825260209283019290910190600101611f55565b50505060a095909501945060209290920191600101611f41565b5050505050565b8060005b60058110156113445781516001600160a01b0316845260209384019390910190600101611f98565b6105808101611fcf8289611f10565b611fdd610160830188611f3c565b85610480830152846104a0830152611ff96104c0830185611f94565b6001600160a01b0392909216610560919091015295945050505050565b61068081016120258289611f10565b612033610160830188611f3c565b856104808301526120486104a0830186611f94565b612056610540830185611f94565b611aad6105e0830184611f94565b60005b8381101561207f578181015183820152602001612067565b50506000910152565b6000825161209a818460208701612064565b9190910192915050565b60208152600082518060208401526120c3816040850160208701612064565b601f01601f1916919091016040019291505056fea2646970667358221220341169cded884d82455b04e3fa3a4d043cab5a25a2de0690aa9b0f49fb35aa8f64736f6c6343000818003312bf5c1f8c71d2ab50ad26cd63e0f5c50ba43161b985f5d4c823c1c5b55e3f1b';

type StrategyCurveSwapAndConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyCurveSwapAndConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyCurveSwapAnd__factory extends ContractFactory {
  constructor(...args: StrategyCurveSwapAndConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    iAsset: AddressLike,
    iUnderlyingStrategy: AddressLike,
    iOracle: AddressLike,
    router: AddressLike,
    iPool: AddressLike,
    inTokenPoolIndex: BigNumberish,
    outTokenPoolIndex: BigNumberish,
    iSwapType: BigNumberish,
    iPoolType: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      iAsset,
      iUnderlyingStrategy,
      iOracle,
      router,
      iPool,
      inTokenPoolIndex,
      outTokenPoolIndex,
      iSwapType,
      iPoolType,
      overrides || {},
    );
  }
  override deploy(
    initialOwner: AddressLike,
    iAsset: AddressLike,
    iUnderlyingStrategy: AddressLike,
    iOracle: AddressLike,
    router: AddressLike,
    iPool: AddressLike,
    inTokenPoolIndex: BigNumberish,
    outTokenPoolIndex: BigNumberish,
    iSwapType: BigNumberish,
    iPoolType: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(
      initialOwner,
      iAsset,
      iUnderlyingStrategy,
      iOracle,
      router,
      iPool,
      inTokenPoolIndex,
      outTokenPoolIndex,
      iSwapType,
      iPoolType,
      overrides || {},
    ) as Promise<
      StrategyCurveSwapAnd & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StrategyCurveSwapAnd__factory {
    return super.connect(runner) as StrategyCurveSwapAnd__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyCurveSwapAndInterface {
    return new Interface(_abi) as StrategyCurveSwapAndInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): StrategyCurveSwapAnd {
    return new Contract(address, _abi, runner) as unknown as StrategyCurveSwapAnd;
  }
}
