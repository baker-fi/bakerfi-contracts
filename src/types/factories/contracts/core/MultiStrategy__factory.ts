/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from 'ethers';
import type { MultiStrategy, MultiStrategyInterface } from '../../../contracts/core/MultiStrategy';

const _abi = [
  {
    inputs: [],
    name: 'InvalidDeltas',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidDeltasLength',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidStrategies',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidStrategy',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'InvalidStrategyIndex',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidWeights',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidWeightsLength',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'strategy',
        type: 'address',
      },
    ],
    name: 'AddStrategy',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'maxDifference',
        type: 'uint256',
      },
    ],
    name: 'MaxDifferenceUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'strategy',
        type: 'address',
      },
    ],
    name: 'RemoveStrategy',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint16[]',
        name: 'weights',
        type: 'uint16[]',
      },
    ],
    name: 'WeightsUpdated',
    type: 'event',
  },
  {
    inputs: [],
    name: 'MAX_TOTAL_WEIGHT',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'strategies',
    outputs: [
      {
        internalType: 'contract IStrategy[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalWeight',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'weights',
    outputs: [
      {
        internalType: 'uint16[]',
        name: '',
        type: 'uint16[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class MultiStrategy__factory {
  static readonly abi = _abi;
  static createInterface(): MultiStrategyInterface {
    return new Interface(_abi) as MultiStrategyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MultiStrategy {
    return new Contract(address, _abi, runner) as unknown as MultiStrategy;
  }
}
