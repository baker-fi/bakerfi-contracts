/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../../../common';
import type { BKR, BKRInterface } from '../../../../contracts/core/governance/BKR';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'initialOwner',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InvalidShortString',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'str',
        type: 'string',
      },
    ],
    name: 'StringTooLong',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'delegator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'fromDelegate',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'toDelegate',
        type: 'address',
      },
    ],
    name: 'DelegateChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'delegate',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'previousBalance',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newBalance',
        type: 'uint256',
      },
    ],
    name: 'DelegateVotesChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'EIP712DomainChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'CLOCK_MODE',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'DOMAIN_SEPARATOR',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'pos',
        type: 'uint32',
      },
    ],
    name: 'checkpoints',
    outputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'fromBlock',
            type: 'uint32',
          },
          {
            internalType: 'uint224',
            name: 'votes',
            type: 'uint224',
          },
        ],
        internalType: 'struct ERC20Votes.Checkpoint',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clock',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegatee',
        type: 'address',
      },
    ],
    name: 'delegate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegatee',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'expiry',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'v',
        type: 'uint8',
      },
      {
        internalType: 'bytes32',
        name: 'r',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'delegateBySig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'delegates',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'eip712Domain',
    outputs: [
      {
        internalType: 'bytes1',
        name: 'fields',
        type: 'bytes1',
      },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'version',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'verifyingContract',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'salt',
        type: 'bytes32',
      },
      {
        internalType: 'uint256[]',
        name: 'extensions',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'timepoint',
        type: 'uint256',
      },
    ],
    name: 'getPastTotalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'timepoint',
        type: 'uint256',
      },
    ],
    name: 'getPastVotes',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'getVotes',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'nonces',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'numCheckpoints',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'v',
        type: 'uint8',
      },
      {
        internalType: 'bytes32',
        name: 'r',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'permit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6101606040523480156200001257600080fd5b5060405162002d1538038062002d15833981016040819052620000359162000984565b6040518060400160405280600781526020016642616b6572466960c81b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600781526020016642616b6572466960c81b815250604051806040016040528060038152602001622125a960e91b8152508160039081620000bd919062000a55565b506004620000cc828262000a55565b505050620000e9620000e3620001c960201b60201c565b620001cd565b620000f68260066200021f565b61012052620001078160076200021f565b61014052815160208084019190912060e052815190820120610100524660a0526200019560e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05250620001b7816b019d971e4fe8401e7400000062000258565b620001c28162000268565b5062000bd9565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020835110156200023f576200023783620002eb565b905062000252565b816200024c848262000a55565b5060ff90505b92915050565b6200026482826200032e565b5050565b62000272620003d6565b6001600160a01b038116620002dd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620002e881620001cd565b50565b600080829050601f8151111562000319578260405163305a27a960e01b8152600401620002d4919062000b21565b8051620003268262000b72565b179392505050565b6200033a828262000434565b6001600160e01b036200034e620005018216565b1115620003b75760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608401620002d4565b620003d0600c62000cb96200050760201b17836200051c565b50505050565b6005546001600160a01b03163314620004325760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620002d4565b565b6001600160a01b0382166200048c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620002d4565b8060026000828254620004a0919062000bad565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36200026460008383620006a9565b60025490565b600062000515828462000bad565b9392505050565b825460009081908181156200056b5760008781526020902082016000190160408051808201909152905463ffffffff8116825264010000000090046001600160e01b0316602082015262000580565b60408051808201909152600080825260208201525b905080602001516001600160e01b031693506200059e84868860201c565b9250600082118015620005cb5750620005b6620006b6565b65ffffffffffff16816000015163ffffffff16145b156200061457620005dc83620006c8565b60008881526020902083016000190180546001600160e01b03929092166401000000000263ffffffff9092169190911790556200069a565b8660405180604001604052806200064262000634620006b660201b60201c565b65ffffffffffff1662000737565b63ffffffff1681526020016200065886620006c8565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b505050565b620006a48383836200079e565b6000620006c343620007d2565b905090565b60006001600160e01b03821115620007335760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608401620002d4565b5090565b600063ffffffff821115620007335760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401620002d4565b6001600160a01b038381166000908152600a6020526040808220548584168352912054620006a4929182169116836200083b565b600065ffffffffffff821115620007335760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401620002d4565b816001600160a01b0316836001600160a01b0316141580156200085e5750600081115b15620006a4576001600160a01b03831615620008eb576001600160a01b0383166000908152600b6020908152604082208291620008a8919062000976901b62000cc517856200051c565b91509150846001600160a01b031660008051602062002cf58339815191528383604051620008e0929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615620006a4576001600160a01b0382166000908152600b60209081526040822082916200092f919062000507901b62000cb917856200051c565b91509150836001600160a01b031660008051602062002cf5833981519152838360405162000967929190918252602082015260400190565b60405180910390a25050505050565b600062000515828462000bc3565b6000602082840312156200099757600080fd5b81516001600160a01b03811681146200051557600080fd5b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620009da57607f821691505b602082108103620009fb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620006a4576000816000526020600020601f850160051c8101602086101562000a2c5750805b601f850160051c820191505b8181101562000a4d5782815560010162000a38565b505050505050565b81516001600160401b0381111562000a715762000a71620009af565b62000a898162000a828454620009c5565b8462000a01565b602080601f83116001811462000ac1576000841562000aa85750858301515b600019600386901b1c1916600185901b17855562000a4d565b600085815260208120601f198616915b8281101562000af25788860151825594840194600190910190840162000ad1565b508582101562000b115787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352835180602085015260005b8181101562000b515785810183015185820160400152820162000b33565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620009fb5760001960209190910360031b1b16919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111562000252576200025262000b97565b8181038181111562000252576200025262000b97565b60805160a05160c05160e0516101005161012051610140516120c162000c34600039600061071e015260006106f3015260006110f3015260006110cb01526000611026015260006110500152600061107a01526120c16000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80637ecebe00116100f9578063a457c2d711610097578063d505accf11610071578063d505accf146103eb578063dd62ed3e146103fe578063f1127ed814610411578063f2fde38b1461044e57600080fd5b8063a457c2d7146103b2578063a9059cbb146103c5578063c3cda520146103d857600080fd5b80638e539e8c116100d35780638e539e8c1461036557806391ddadf41461037857806395d89b41146103975780639ab24eb01461039f57600080fd5b80637ecebe001461032657806384b0196e146103395780638da5cb5b1461035457600080fd5b80633a46b1a8116101665780635c19a95c116101405780635c19a95c146102b85780636fcfff45146102cd57806370a08231146102f5578063715018a61461031e57600080fd5b80633a46b1a8146102595780634bf5d7e91461026c578063587cde1e1461027457600080fd5b806323b872dd116101a257806323b872dd1461021c578063313ce5671461022f5780633644e5151461023e578063395093511461024657600080fd5b806306fdde03146101c9578063095ea7b3146101e757806318160ddd1461020a575b600080fd5b6101d1610461565b6040516101de9190611d0f565b60405180910390f35b6101fa6101f5366004611d3e565b6104f3565b60405190151581526020016101de565b6002545b6040519081526020016101de565b6101fa61022a366004611d68565b61050d565b604051601281526020016101de565b61020e610531565b6101fa610254366004611d3e565b610540565b61020e610267366004611d3e565b610562565b6101d16105ec565b6102a0610282366004611da4565b6001600160a01b039081166000908152600a60205260409020541690565b6040516001600160a01b0390911681526020016101de565b6102cb6102c6366004611da4565b610684565b005b6102e06102db366004611da4565b610691565b60405163ffffffff90911681526020016101de565b61020e610303366004611da4565b6001600160a01b031660009081526020819052604090205490565b6102cb6106b3565b61020e610334366004611da4565b6106c7565b6103416106e5565b6040516101de9796959493929190611dbf565b6005546001600160a01b03166102a0565b61020e610373366004611e58565b61076e565b6103806107d5565b60405165ffffffffffff90911681526020016101de565b6101d16107e0565b61020e6103ad366004611da4565b6107ef565b6101fa6103c0366004611d3e565b610871565b6101fa6103d3366004611d3e565b6108ec565b6102cb6103e6366004611e82565b6108fa565b6102cb6103f9366004611eda565b610a30565b61020e61040c366004611f44565b610b94565b61042461041f366004611f77565b610bbf565b60408051825163ffffffff1681526020928301516001600160e01b031692810192909252016101de565b6102cb61045c366004611da4565b610c43565b60606003805461047090611fb7565b80601f016020809104026020016040519081016040528092919081815260200182805461049c90611fb7565b80156104e95780601f106104be576101008083540402835291602001916104e9565b820191906000526020600020905b8154815290600101906020018083116104cc57829003601f168201915b5050505050905090565b600033610501818585610cd1565b60019150505b92915050565b60003361051b858285610df5565b610526858585610e6f565b506001949350505050565b600061053b611019565b905090565b6000336105018185856105538383610b94565b61055d9190612001565b610cd1565b600061056c6107d5565b65ffffffffffff1682106105c35760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b60448201526064015b60405180910390fd5b6001600160a01b0383166000908152600b602052604090206105e59083611144565b9392505050565b6060436105f76107d5565b65ffffffffffff161461064c5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f646500000060448201526064016105ba565b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b61068e338261122d565b50565b6001600160a01b0381166000908152600b6020526040812054610507906112a6565b6106bb61130f565b6106c56000611369565b565b6001600160a01b038116600090815260086020526040812054610507565b6000606080828080836107197f000000000000000000000000000000000000000000000000000000000000000060066113bb565b6107447f000000000000000000000000000000000000000000000000000000000000000060076113bb565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60006107786107d5565b65ffffffffffff1682106107ca5760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b60448201526064016105ba565b610507600c83611144565b600061053b43611466565b60606004805461047090611fb7565b6001600160a01b0381166000908152600b6020526040812054801561085e576001600160a01b0383166000908152600b602052604090208054600019830190811061083c5761083c612014565b60009182526020909120015464010000000090046001600160e01b0316610861565b60005b6001600160e01b03169392505050565b6000338161087f8286610b94565b9050838110156108df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105ba565b6105268286868403610cd1565b600033610501818585610e6f565b8342111561094a5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016105ba565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906109c4906109bc9060a001604051602081830303815290604052805190602001206114cd565b8585856114fa565b90506109cf81611522565b8614610a1d5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016105ba565b610a27818861122d565b50505050505050565b83421115610a805760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105ba565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610aaf8c611522565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610b0a826114cd565b90506000610b1a828787876114fa565b9050896001600160a01b0316816001600160a01b031614610b7d5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105ba565b610b888a8a8a610cd1565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600b60205260409020805463ffffffff8416908110610c0357610c03612014565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610c4b61130f565b6001600160a01b038116610cb05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ba565b61068e81611369565b60006105e58284612001565b60006105e5828461202a565b6001600160a01b038316610d335760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105ba565b6001600160a01b038216610d945760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105ba565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610e018484610b94565b90506000198114610e695781811015610e5c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105ba565b610e698484848403610cd1565b50505050565b6001600160a01b038316610ed35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105ba565b6001600160a01b038216610f355760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105ba565b6001600160a01b03831660009081526020819052604090205481811015610fad5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105ba565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610e6984848461154f565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561107257507f000000000000000000000000000000000000000000000000000000000000000046145b1561109c57507f000000000000000000000000000000000000000000000000000000000000000090565b61053b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b81546000908181600581111561119e57600061115f8461155a565b611169908561202a565b600088815260209020909150869082015463ffffffff16111561118e5780915061119c565b611199816001612001565b92505b505b808210156111eb5760006111b28383611642565b600088815260209020909150869082015463ffffffff1611156111d7578091506111e5565b6111e2816001612001565b92505b5061119e565b8015611217576000868152602090208101600019015464010000000090046001600160e01b031661121a565b60005b6001600160e01b03169695505050505050565b6001600160a01b038281166000818152600a60208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610e6982848361165d565b600063ffffffff82111561130b5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016105ba565b5090565b6005546001600160a01b031633146106c55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105ba565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606060ff83146113d5576113ce8361179a565b9050610507565b8180546113e190611fb7565b80601f016020809104026020016040519081016040528092919081815260200182805461140d90611fb7565b801561145a5780601f1061142f5761010080835404028352916020019161145a565b820191906000526020600020905b81548152906001019060200180831161143d57829003601f168201915b50505050509050610507565b600065ffffffffffff82111561130b5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b60648201526084016105ba565b60006105076114da611019565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600061150b878787876117d9565b915091506115188161189d565b5095945050505050565b6001600160a01b03811660009081526008602052604090208054600181018255905b50919050565b505050565b61154a8383836119e7565b60008160000361156c57506000919050565b6000600161157984611a19565b901c6001901b905060018184816115925761159261203d565b048201901c905060018184816115aa576115aa61203d565b048201901c905060018184816115c2576115c261203d565b048201901c905060018184816115da576115da61203d565b048201901c905060018184816115f2576115f261203d565b048201901c9050600181848161160a5761160a61203d565b048201901c905060018184816116225761162261203d565b048201901c90506105e58182858161163c5761163c61203d565b04611aad565b60006116516002848418612053565b6105e590848416612001565b816001600160a01b0316836001600160a01b03161415801561167f5750600081115b1561154a576001600160a01b0383161561170d576001600160a01b0383166000908152600b6020526040812081906116ba90610cc585611ac3565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611702929190918252602082015260400190565b60405180910390a250505b6001600160a01b0382161561154a576001600160a01b0382166000908152600b60205260408120819061174390610cb985611ac3565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161178b929190918252602082015260400190565b60405180910390a25050505050565b606060006117a783611c38565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156118105750600090506003611894565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611864573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661188d57600060019250925050611894565b9150600090505b94509492505050565b60008160048111156118b1576118b1612075565b036118b95750565b60018160048111156118cd576118cd612075565b0361191a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105ba565b600281600481111561192e5761192e612075565b0361197b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105ba565b600381600481111561198f5761198f612075565b0361068e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105ba565b6001600160a01b038381166000908152600a602052604080822054858416835291205461154a9291821691168361165d565b600080608083901c15611a2e57608092831c92015b604083901c15611a4057604092831c92015b602083901c15611a5257602092831c92015b601083901c15611a6457601092831c92015b600883901c15611a7657600892831c92015b600483901c15611a8857600492831c92015b600283901c15611a9a57600292831c92015b600183901c156105075760010192915050565b6000818310611abc57816105e5565b5090919050565b82546000908190818115611b105760008781526020902082016000190160408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152611b25565b60408051808201909152600080825260208201525b905080602001516001600160e01b03169350611b4584868863ffffffff16565b9250600082118015611b6f5750611b5a6107d5565b65ffffffffffff16816000015163ffffffff16145b15611bb457611b7d83611c60565b60008881526020902083016000190180546001600160e01b03929092166401000000000263ffffffff909216919091179055611c2e565b866040518060400160405280611bd8611bcb6107d5565b65ffffffffffff166112a6565b63ffffffff168152602001611bec86611c60565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b600060ff8216601f81111561050757604051632cd44ac360e21b815260040160405180910390fd5b60006001600160e01b0382111561130b5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016105ba565b6000815180845260005b81811015611cef57602081850181015186830182015201611cd3565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006105e56020830184611cc9565b80356001600160a01b0381168114611d3957600080fd5b919050565b60008060408385031215611d5157600080fd5b611d5a83611d22565b946020939093013593505050565b600080600060608486031215611d7d57600080fd5b611d8684611d22565b9250611d9460208501611d22565b9150604084013590509250925092565b600060208284031215611db657600080fd5b6105e582611d22565b60ff60f81b881681526000602060e06020840152611de060e084018a611cc9565b8381036040850152611df2818a611cc9565b606085018990526001600160a01b038816608086015260a0850187905284810360c08601528551808252602080880193509091019060005b81811015611e4657835183529284019291840191600101611e2a565b50909c9b505050505050505050505050565b600060208284031215611e6a57600080fd5b5035919050565b803560ff81168114611d3957600080fd5b60008060008060008060c08789031215611e9b57600080fd5b611ea487611d22565b95506020870135945060408701359350611ec060608801611e71565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611ef557600080fd5b611efe88611d22565b9650611f0c60208901611d22565b95506040880135945060608801359350611f2860808901611e71565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611f5757600080fd5b611f6083611d22565b9150611f6e60208401611d22565b90509250929050565b60008060408385031215611f8a57600080fd5b611f9383611d22565b9150602083013563ffffffff81168114611fac57600080fd5b809150509250929050565b600181811c90821680611fcb57607f821691505b60208210810361154457634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561050757610507611feb565b634e487b7160e01b600052603260045260246000fd5b8181038181111561050757610507611feb565b634e487b7160e01b600052601260045260246000fd5b60008261207057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220c18a4ac2ecf7ad7730541009bfd98ae7049eae40876e7eeb302f55266790420564736f6c63430008180033dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724';

type BKRConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BKRConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BKR__factory extends ContractFactory {
  constructor(...args: BKRConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(initialOwner: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      BKR & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BKR__factory {
    return super.connect(runner) as BKR__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BKRInterface {
    return new Interface(_abi) as BKRInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BKR {
    return new Contract(address, _abi, runner) as unknown as BKR;
  }
}
