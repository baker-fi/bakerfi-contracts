/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Lock, LockInterface } from "../../../contracts/core/Lock";

const _abi = [
  {
    inputs: [],
    name: "isLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whoLocked",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff1916905534801561001a57600080fd5b506101aa8061002a6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063a4e2d63414610051578063a69df4b51461006c578063aa979c2714610076578063f83d08ba1461009f575b600080fd5b60005460ff1660405190151581526020015b60405180910390f35b6100746100bf565b005b60005461010090046001600160a01b03166040516001600160a01b039091168152602001610063565b6100746000805433610100026001600160a81b0319909116176001179055565b60005461010090046001600160a01b031633146101235760405162461bcd60e51b815260206004820152601a60248201527f4f6e6c7920746865206c6f636b65722063616e20756e6c6f636b00000000000060448201526064015b60405180910390fd5b60005460ff166101625760405162461bcd60e51b815260206004820152600a602482015269139bdd081b1bd8dad95960b21b604482015260640161011a565b600080546001600160a81b031916905556fea2646970667358221220c7cb31c1f6182e77b34e33a5115ba7aab444701d385ca4625d01aeb2865c830564736f6c63430008120033";

type LockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lock__factory extends ContractFactory {
  constructor(...args: LockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Lock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Lock__factory {
    return super.connect(runner) as Lock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockInterface {
    return new Interface(_abi) as LockInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Lock {
    return new Contract(address, _abi, runner) as unknown as Lock;
  }
}
