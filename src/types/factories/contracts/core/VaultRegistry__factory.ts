/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  VaultRegistry,
  VaultRegistryInterface,
} from "../../../contracts/core/VaultRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ownerToSet",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ServiceAlreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "ServiceUnknown",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nameHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "service",
        type: "address",
      },
    ],
    name: "ServiceRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nameHash",
        type: "bytes32",
      },
    ],
    name: "ServiceUnregistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "serviceName",
        type: "string",
      },
    ],
    name: "getService",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "serviceHash",
        type: "bytes32",
      },
    ],
    name: "getServiceFromHash",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "getServiceNameHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "serviceNameHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "serviceAddress",
        type: "address",
      },
    ],
    name: "registerService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "serviceNameHash",
        type: "bytes32",
      },
    ],
    name: "unregisterService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106f83803806106f883398101604081905261002f916100be565b6100383361006e565b6001600160a01b03811661005f576040516349e27cff60e01b815260040160405180910390fd5b6100688161006e565b506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b6105fb806100fd6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063794758be1161005b578063794758be146101115780638da5cb5b146101245780639c2bfa2514610135578063f2fde38b1461014857600080fd5b80632e5688e11461008d5780634a56b027146100d3578063715018a6146100f457806372dd0ff8146100fe575b600080fd5b6100b661009b36600461044c565b6000908152600160205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100e136600461047b565b61015b565b6040519081526020016100ca565b6100fc61018b565b005b6100fc61010c366004610548565b61019f565b6100b661011f36600461047b565b610242565b6000546001600160a01b03166100b6565b6100fc61014336600461044c565b61028e565b6100fc610156366004610574565b610324565b60008160405160200161016e9190610596565b604051602081830303815290604052805190602001209050919050565b6101936103a2565b61019d60006103fc565b565b6101a76103a2565b6000828152600160205260409020546001600160a01b0316156101dc576040516266d14b60e11b815260040160405180910390fd5b60008281526001602090815260409182902080546001600160a01b0319166001600160a01b0385169081179091558251858152918201527f0453e3ffce9b0d4f994d54652037d3e15d87ec29aab0aafba90ac322edc87c25910160405180910390a15050565b600060016000836040516020016102599190610596565b60408051601f19818403018152918152815160209283012083529082019290925201600020546001600160a01b031692915050565b6102966103a2565b6000818152600160205260409020546001600160a01b03166102cb5760405163a22a7adb60e01b815260040160405180910390fd5b6000818152600160205260409081902080546001600160a01b0319169055517f475a09e552c07ad6aa3d8b6f3fb547091aae08290004e78277eb2ffb854ea21e906103199083815260200190565b60405180910390a150565b61032c6103a2565b6001600160a01b0381166103965760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61039f816103fc565b50565b6000546001600160a01b0316331461019d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161038d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561045e57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561048d57600080fd5b813567ffffffffffffffff808211156104a557600080fd5b818401915084601f8301126104b957600080fd5b8135818111156104cb576104cb610465565b604051601f8201601f19908116603f011681019083821181831017156104f3576104f3610465565b8160405282815287602084870101111561050c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b80356001600160a01b038116811461054357600080fd5b919050565b6000806040838503121561055b57600080fd5b8235915061056b6020840161052c565b90509250929050565b60006020828403121561058657600080fd5b61058f8261052c565b9392505050565b6000825160005b818110156105b7576020818601810151858301520161059d565b50600092019182525091905056fea2646970667358221220baa0faf36d39e0e90dc403df1df53011121f82ca41430a9b7cf3d680365785b264736f6c63430008180033";

type VaultRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultRegistry__factory extends ContractFactory {
  constructor(...args: VaultRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    ownerToSet: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(ownerToSet, overrides || {});
  }
  override deploy(
    ownerToSet: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(ownerToSet, overrides || {}) as Promise<
      VaultRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VaultRegistry__factory {
    return super.connect(runner) as VaultRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultRegistryInterface {
    return new Interface(_abi) as VaultRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VaultRegistry {
    return new Contract(address, _abi, runner) as unknown as VaultRegistry;
  }
}
